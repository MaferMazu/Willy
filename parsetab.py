
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'TkAnd TkAs TkAt TkBasket TkBasketLower TkBegin TkBeginTask TkBeginWorld TkBlue TkBoolean TkCapacity TkCarrying TkClear TkColor TkCyan TkDefine TkDo TkDrop TkEast TkElse TkEnd TkEndTask TkEndWorld TkFalse TkFinalG TkFlip TkFound TkFrom TkFrontCl TkGoal TkGreen TkHeading TkId TkIf TkIn TkInitial TkIs TkLeftCl TkLookingE TkLookingN TkLookingS TkLookingW TkMagenta TkMove TkNorth TkNot TkNum TkObjType TkObjectsLower TkOf TkOn TkOr TkParenL TkParenR TkPick TkPlace TkRed TkRepeat TkRightCl TkSemicolon TkSet TkSouth TkStart TkTab TkTerminate TkThen TkTimes TkTo TkTrue TkTurnL TkTurnR TkValue TkWall TkWest TkWhile TkWilly TkWith TkWorld TkYellowcorrectProgram : program\n    program : worldBlock \n            | taskBlock \n            | worldBlock program\n            | taskBlock program\n    worldInstSet : worldInst TkSemicolon worldInstSet\n                    | worldInst worldInstSet\n                    | worldInst TkSemicolon\n     worldInst : worldSet  \n                | wallSet  \n                | newObjType  \n                | setPlaceObjWorld  \n                | setStartPosition \n                | setBasketCapacity  \n                | newBoolean  \n                | newGoal \n                | finalGoal  \n    wallSet : TkWall directions TkFrom TkNum TkNum TkTo TkNum TkNumworldBlock : TkBeginWorld ids worldInstSet TkEndWorld  \n                    | TkBeginWorld ids TkEndWorld  worldSet : TkWorld TkNum TkNum \n                | emptynewObjType : TkObjType ids TkOf TkColor colorscolors : TkRed\n                | TkBlue\n                | TkMagenta\n                | TkCyan\n                | TkGreen\n                | TkYellowsetPlaceObjWorld : TkPlace TkNum TkOf ids TkAt TkNum TkNum\n                        | TkPlace TkNum TkOf ids TkIn TkBasketLower\n    setPlaceObjBasket : TkPlace TkNum TkOf ids TkIn TkBasketLowersetStartPosition : TkStart TkAt TkNum TkNum TkHeading directionssetBasketCapacity : TkBasket TkOf TkCapacity TkNumnewBoolean : TkBoolean ids TkWith TkInitial TkValue TkTrue \n                | TkBoolean ids TkWith TkInitial TkValue TkFalse\n    newGoal : TkGoal ids TkIs TkWilly TkIs TkAt TkNum TkNum\n            | TkGoal ids TkIs TkNum ids TkObjectsLower TkIn TkBasket\n            | TkGoal ids TkIs TkNum ids TkObjectsLower TkAt TkNum TkNum \n    finalGoal : TkFinalG TkIs ids \n            | TkFinalG TkIs ids TkAnd ids\n            | TkFinalG TkIs ids TkOr ids\n            | TkFinalG TkIs TkNot ids \n            | TkParenL ids TkParenR\n    ids : TkIdtaskBlock : TkBeginTask ids TkOn ids multiInstructions TkEndTaskmultiInstructions : instructions\n                        | empty\n                        | instructions TkSemicolon multiInstructionsprimitiveInstructions : TkMove\n                    | TkTurnL\n                    | TkTurnR\n                    | TkPick ids\n                    | TkDrop ids\n                    | TkSet ids\n                    | TkSet ids TkTo TkTrue\n                    | TkSet ids TkTo TkFalse\n                    | TkClear ids\n                    | TkFlip ids\n                    | TkTerminatebooleanTests : ids\n                    | primitiveBoolean\n                    | TkFound TkParenL ids TkParenR\n                    | TkCarrying TkParenL ids TkParenR\n                    | booleanTests TkAnd booleanTests\n                    | booleanTests TkOr booleanTests\n                    | TkNot booleanTests\n                    | TkParenL booleanTests TkParenRprimitiveBoolean : TkFrontCl\n                        | TkLeftCl\n                        | TkRightCl\n                        | TkLookingN\n                        | TkLookingE\n                        | TkLookingS\n                        | TkLookingWinstructions : primitiveInstructions\n                    | TkIf booleanTests TkThen instructions\n                    | TkIf booleanTests TkThen instructions TkElse instructions\n                    | TkRepeat TkNum TkTimes instructions\n                    | TkWhile booleanTests TkDo instructions\n                    | TkBegin multiInstructions TkEnd\n                    | TkDefine ids TkAs instructionsdirections : TkNorth \n                | TkEast \n                | TkSouth \n                | TkWestempty :'
    
_lr_action_items = {'TkBeginWorld':([0,3,4,13,36,95,],[5,5,5,-20,-19,-46,]),'TkBeginTask':([0,3,4,13,36,95,],[6,6,6,-20,-19,-46,]),'$end':([1,2,3,4,7,8,13,36,95,],[0,-1,-2,-3,-4,-5,-20,-19,-46,]),'TkId':([5,6,27,31,32,34,35,51,58,64,70,72,74,78,79,80,81,82,91,92,93,101,103,138,139,140,142,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'TkEndWorld':([9,10,12,37,38,54,],[13,-45,36,-8,-7,-6,]),'TkWorld':([9,10,14,15,16,17,18,19,20,21,22,23,25,37,41,42,43,44,55,63,65,88,94,121,122,123,124,125,126,127,134,135,151,152,153,154,169,176,177,178,181,],[24,-45,24,-9,-10,-11,-12,-13,-14,-15,-16,-17,-22,24,-83,-84,-85,-86,-21,-40,-44,-34,-43,-23,-24,-25,-26,-27,-28,-29,-41,-42,-31,-33,-35,-36,-30,-18,-37,-38,-39,]),'TkWall':([9,10,14,15,16,17,18,19,20,21,22,23,25,37,41,42,43,44,55,63,65,88,94,121,122,123,124,125,126,127,134,135,151,152,153,154,169,176,177,178,181,],[26,-45,26,-9,-10,-11,-12,-13,-14,-15,-16,-17,-22,26,-83,-84,-85,-86,-21,-40,-44,-34,-43,-23,-24,-25,-26,-27,-28,-29,-41,-42,-31,-33,-35,-36,-30,-18,-37,-38,-39,]),'TkObjType':([9,10,14,15,16,17,18,19,20,21,22,23,25,37,41,42,43,44,55,63,65,88,94,121,122,123,124,125,126,127,134,135,151,152,153,154,169,176,177,178,181,],[27,-45,27,-9,-10,-11,-12,-13,-14,-15,-16,-17,-22,27,-83,-84,-85,-86,-21,-40,-44,-34,-43,-23,-24,-25,-26,-27,-28,-29,-41,-42,-31,-33,-35,-36,-30,-18,-37,-38,-39,]),'TkPlace':([9,10,14,15,16,17,18,19,20,21,22,23,25,37,41,42,43,44,55,63,65,88,94,121,122,123,124,125,126,127,134,135,151,152,153,154,169,176,177,178,181,],[28,-45,28,-9,-10,-11,-12,-13,-14,-15,-16,-17,-22,28,-83,-84,-85,-86,-21,-40,-44,-34,-43,-23,-24,-25,-26,-27,-28,-29,-41,-42,-31,-33,-35,-36,-30,-18,-37,-38,-39,]),'TkStart':([9,10,14,15,16,17,18,19,20,21,22,23,25,37,41,42,43,44,55,63,65,88,94,121,122,123,124,125,126,127,134,135,151,152,153,154,169,176,177,178,181,],[29,-45,29,-9,-10,-11,-12,-13,-14,-15,-16,-17,-22,29,-83,-84,-85,-86,-21,-40,-44,-34,-43,-23,-24,-25,-26,-27,-28,-29,-41,-42,-31,-33,-35,-36,-30,-18,-37,-38,-39,]),'TkBasket':([9,10,14,15,16,17,18,19,20,21,22,23,25,37,41,42,43,44,55,63,65,88,94,121,122,123,124,125,126,127,134,135,151,152,153,154,169,171,176,177,178,181,],[30,-45,30,-9,-10,-11,-12,-13,-14,-15,-16,-17,-22,30,-83,-84,-85,-86,-21,-40,-44,-34,-43,-23,-24,-25,-26,-27,-28,-29,-41,-42,-31,-33,-35,-36,-30,178,-18,-37,-38,-39,]),'TkBoolean':([9,10,14,15,16,17,18,19,20,21,22,23,25,37,41,42,43,44,55,63,65,88,94,121,122,123,124,125,126,127,134,135,151,152,153,154,169,176,177,178,181,],[31,-45,31,-9,-10,-11,-12,-13,-14,-15,-16,-17,-22,31,-83,-84,-85,-86,-21,-40,-44,-34,-43,-23,-24,-25,-26,-27,-28,-29,-41,-42,-31,-33,-35,-36,-30,-18,-37,-38,-39,]),'TkGoal':([9,10,14,15,16,17,18,19,20,21,22,23,25,37,41,42,43,44,55,63,65,88,94,121,122,123,124,125,126,127,134,135,151,152,153,154,169,176,177,178,181,],[32,-45,32,-9,-10,-11,-12,-13,-14,-15,-16,-17,-22,32,-83,-84,-85,-86,-21,-40,-44,-34,-43,-23,-24,-25,-26,-27,-28,-29,-41,-42,-31,-33,-35,-36,-30,-18,-37,-38,-39,]),'TkFinalG':([9,10,14,15,16,17,18,19,20,21,22,23,25,37,41,42,43,44,55,63,65,88,94,121,122,123,124,125,126,127,134,135,151,152,153,154,169,176,177,178,181,],[33,-45,33,-9,-10,-11,-12,-13,-14,-15,-16,-17,-22,33,-83,-84,-85,-86,-21,-40,-44,-34,-43,-23,-24,-25,-26,-27,-28,-29,-41,-42,-31,-33,-35,-36,-30,-18,-37,-38,-39,]),'TkParenL':([9,10,14,15,16,17,18,19,20,21,22,23,25,37,41,42,43,44,55,63,65,70,72,88,94,100,101,102,103,121,122,123,124,125,126,127,134,135,138,139,151,152,153,154,169,176,177,178,181,],[34,-45,34,-9,-10,-11,-12,-13,-14,-15,-16,-17,-22,34,-83,-84,-85,-86,-21,-40,-44,101,101,-34,-43,140,101,142,101,-23,-24,-25,-26,-27,-28,-29,-41,-42,101,101,-31,-33,-35,-36,-30,-18,-37,-38,-39,]),'TkSemicolon':([9,10,14,15,16,17,18,19,20,21,22,23,25,37,41,42,43,44,55,63,65,67,69,75,76,77,83,88,94,115,116,117,118,119,121,122,123,124,125,126,127,134,135,146,151,152,153,154,157,163,164,165,166,167,169,176,177,178,180,181,],[-87,-45,37,-9,-10,-11,-12,-13,-14,-15,-16,-17,-22,-87,-83,-84,-85,-86,-21,-40,-44,96,-76,-50,-51,-52,-60,-34,-43,-53,-54,-55,-58,-59,-23,-24,-25,-26,-27,-28,-29,-41,-42,-81,-31,-33,-35,-36,-77,-79,-80,-82,-56,-57,-30,-18,-37,-38,-78,-39,]),'TkOn':([10,11,],[-45,35,]),'TkOf':([10,30,45,46,],[-45,48,57,58,]),'TkWith':([10,49,],[-45,61,]),'TkIs':([10,33,50,90,],[-45,51,62,132,]),'TkParenR':([10,52,98,99,104,105,106,107,108,109,110,141,143,158,159,160,161,162,174,175,],[-45,65,-61,-62,-69,-70,-71,-72,-73,-74,-75,161,-67,-65,-66,174,-68,175,-63,-64,]),'TkIf':([10,53,73,96,137,144,145,147,173,],[-45,70,70,70,70,70,70,70,70,]),'TkRepeat':([10,53,73,96,137,144,145,147,173,],[-45,71,71,71,71,71,71,71,71,]),'TkWhile':([10,53,73,96,137,144,145,147,173,],[-45,72,72,72,72,72,72,72,72,]),'TkBegin':([10,53,73,96,137,144,145,147,173,],[-45,73,73,73,73,73,73,73,73,]),'TkDefine':([10,53,73,96,137,144,145,147,173,],[-45,74,74,74,74,74,74,74,74,]),'TkMove':([10,53,73,96,137,144,145,147,173,],[-45,75,75,75,75,75,75,75,75,]),'TkTurnL':([10,53,73,96,137,144,145,147,173,],[-45,76,76,76,76,76,76,76,76,]),'TkTurnR':([10,53,73,96,137,144,145,147,173,],[-45,77,77,77,77,77,77,77,77,]),'TkPick':([10,53,73,96,137,144,145,147,173,],[-45,78,78,78,78,78,78,78,78,]),'TkDrop':([10,53,73,96,137,144,145,147,173,],[-45,79,79,79,79,79,79,79,79,]),'TkSet':([10,53,73,96,137,144,145,147,173,],[-45,80,80,80,80,80,80,80,80,]),'TkClear':([10,53,73,96,137,144,145,147,173,],[-45,81,81,81,81,81,81,81,81,]),'TkFlip':([10,53,73,96,137,144,145,147,173,],[-45,82,82,82,82,82,82,82,82,]),'TkTerminate':([10,53,73,96,137,144,145,147,173,],[-45,83,83,83,83,83,83,83,83,]),'TkEndTask':([10,53,66,67,68,69,75,76,77,83,96,115,116,117,118,119,136,146,157,163,164,165,166,167,180,],[-45,-87,95,-47,-48,-76,-50,-51,-52,-60,-87,-53,-54,-55,-58,-59,-49,-81,-77,-79,-80,-82,-56,-57,-78,]),'TkAnd':([10,63,97,98,99,104,105,106,107,108,109,110,112,141,143,158,159,161,174,175,],[-45,92,138,-61,-62,-69,-70,-71,-72,-73,-74,-75,138,138,138,138,138,-68,-63,-64,]),'TkOr':([10,63,97,98,99,104,105,106,107,108,109,110,112,141,143,158,159,161,174,175,],[-45,93,139,-61,-62,-69,-70,-71,-72,-73,-74,-75,139,139,139,139,139,-68,-63,-64,]),'TkAt':([10,29,86,132,156,],[-45,47,128,155,172,]),'TkIn':([10,86,156,],[-45,129,171,]),'TkThen':([10,97,98,99,104,105,106,107,108,109,110,143,158,159,161,174,175,],[-45,137,-61,-62,-69,-70,-71,-72,-73,-74,-75,-67,-65,-66,-68,-63,-64,]),'TkDo':([10,98,99,104,105,106,107,108,109,110,112,143,158,159,161,174,175,],[-45,-61,-62,-69,-70,-71,-72,-73,-74,-75,145,-67,-65,-66,-68,-63,-64,]),'TkAs':([10,114,],[-45,147,]),'TkEnd':([10,67,68,69,73,75,76,77,83,96,113,115,116,117,118,119,136,146,157,163,164,165,166,167,180,],[-45,-47,-48,-76,-87,-50,-51,-52,-60,-87,146,-53,-54,-55,-58,-59,-49,-81,-77,-79,-80,-82,-56,-57,-78,]),'TkElse':([10,69,75,76,77,83,115,116,117,118,119,146,157,163,164,165,166,167,180,],[-45,-76,-50,-51,-52,-60,-53,-54,-55,-58,-59,-81,173,-79,-80,-82,-56,-57,-78,]),'TkTo':([10,117,120,],[-45,148,149,]),'TkObjectsLower':([10,133,],[-45,156,]),'TkNum':([24,28,39,47,56,59,60,62,71,84,128,149,150,155,168,170,172,179,],[39,46,55,59,84,87,88,91,111,120,150,168,169,170,176,177,179,181,]),'TkNorth':([26,130,],[41,41,]),'TkEast':([26,130,],[42,42,]),'TkSouth':([26,130,],[43,43,]),'TkWest':([26,130,],[44,44,]),'TkFrom':([40,41,42,43,44,],[56,-83,-84,-85,-86,]),'TkCapacity':([48,],[60,]),'TkNot':([51,70,72,101,103,138,139,],[64,103,103,103,103,103,103,]),'TkColor':([57,],[85,]),'TkInitial':([61,],[89,]),'TkWilly':([62,],[90,]),'TkFound':([70,72,101,103,138,139,],[100,100,100,100,100,100,]),'TkCarrying':([70,72,101,103,138,139,],[102,102,102,102,102,102,]),'TkFrontCl':([70,72,101,103,138,139,],[104,104,104,104,104,104,]),'TkLeftCl':([70,72,101,103,138,139,],[105,105,105,105,105,105,]),'TkRightCl':([70,72,101,103,138,139,],[106,106,106,106,106,106,]),'TkLookingN':([70,72,101,103,138,139,],[107,107,107,107,107,107,]),'TkLookingE':([70,72,101,103,138,139,],[108,108,108,108,108,108,]),'TkLookingS':([70,72,101,103,138,139,],[109,109,109,109,109,109,]),'TkLookingW':([70,72,101,103,138,139,],[110,110,110,110,110,110,]),'TkRed':([85,],[122,]),'TkBlue':([85,],[123,]),'TkMagenta':([85,],[124,]),'TkCyan':([85,],[125,]),'TkGreen':([85,],[126,]),'TkYellow':([85,],[127,]),'TkHeading':([87,],[130,]),'TkValue':([89,],[131,]),'TkTimes':([111,],[144,]),'TkBasketLower':([129,],[151,]),'TkTrue':([131,148,],[153,166,]),'TkFalse':([131,148,],[154,167,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'correctProgram':([0,],[1,]),'program':([0,3,4,],[2,7,8,]),'worldBlock':([0,3,4,],[3,3,3,]),'taskBlock':([0,3,4,],[4,4,4,]),'ids':([5,6,27,31,32,34,35,51,58,64,70,72,74,78,79,80,81,82,91,92,93,101,103,138,139,140,142,],[9,11,45,49,50,52,53,63,86,94,98,98,114,115,116,117,118,119,133,134,135,98,98,98,98,160,162,]),'worldInstSet':([9,14,37,],[12,38,54,]),'worldInst':([9,14,37,],[14,14,14,]),'worldSet':([9,14,37,],[15,15,15,]),'wallSet':([9,14,37,],[16,16,16,]),'newObjType':([9,14,37,],[17,17,17,]),'setPlaceObjWorld':([9,14,37,],[18,18,18,]),'setStartPosition':([9,14,37,],[19,19,19,]),'setBasketCapacity':([9,14,37,],[20,20,20,]),'newBoolean':([9,14,37,],[21,21,21,]),'newGoal':([9,14,37,],[22,22,22,]),'finalGoal':([9,14,37,],[23,23,23,]),'empty':([9,14,37,53,73,96,],[25,25,25,68,68,68,]),'directions':([26,130,],[40,152,]),'multiInstructions':([53,73,96,],[66,113,136,]),'instructions':([53,73,96,137,144,145,147,173,],[67,67,67,157,163,164,165,180,]),'primitiveInstructions':([53,73,96,137,144,145,147,173,],[69,69,69,69,69,69,69,69,]),'booleanTests':([70,72,101,103,138,139,],[97,112,141,143,158,159,]),'primitiveBoolean':([70,72,101,103,138,139,],[99,99,99,99,99,99,]),'colors':([85,],[121,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> correctProgram","S'",1,None,None,None),
  ('correctProgram -> program','correctProgram',1,'p_correctProgram','myparser.py',19),
  ('program -> worldBlock','program',1,'p_program','myparser.py',26),
  ('program -> taskBlock','program',1,'p_program','myparser.py',27),
  ('program -> worldBlock program','program',2,'p_program','myparser.py',28),
  ('program -> taskBlock program','program',2,'p_program','myparser.py',29),
  ('worldInstSet -> worldInst TkSemicolon worldInstSet','worldInstSet',3,'p_worldInstSet','myparser.py',40),
  ('worldInstSet -> worldInst worldInstSet','worldInstSet',2,'p_worldInstSet','myparser.py',41),
  ('worldInstSet -> worldInst TkSemicolon','worldInstSet',2,'p_worldInstSet','myparser.py',42),
  ('worldInst -> worldSet','worldInst',1,'p_worldInst','myparser.py',46),
  ('worldInst -> wallSet','worldInst',1,'p_worldInst','myparser.py',47),
  ('worldInst -> newObjType','worldInst',1,'p_worldInst','myparser.py',48),
  ('worldInst -> setPlaceObjWorld','worldInst',1,'p_worldInst','myparser.py',49),
  ('worldInst -> setStartPosition','worldInst',1,'p_worldInst','myparser.py',50),
  ('worldInst -> setBasketCapacity','worldInst',1,'p_worldInst','myparser.py',51),
  ('worldInst -> newBoolean','worldInst',1,'p_worldInst','myparser.py',52),
  ('worldInst -> newGoal','worldInst',1,'p_worldInst','myparser.py',53),
  ('worldInst -> finalGoal','worldInst',1,'p_worldInst','myparser.py',54),
  ('wallSet -> TkWall directions TkFrom TkNum TkNum TkTo TkNum TkNum','wallSet',8,'p_wallSet','myparser.py',58),
  ('worldBlock -> TkBeginWorld ids worldInstSet TkEndWorld','worldBlock',4,'p_worldBlock','myparser.py',62),
  ('worldBlock -> TkBeginWorld ids TkEndWorld','worldBlock',3,'p_worldBlock','myparser.py',63),
  ('worldSet -> TkWorld TkNum TkNum','worldSet',3,'p_worldSet','myparser.py',67),
  ('worldSet -> empty','worldSet',1,'p_worldSet','myparser.py',68),
  ('newObjType -> TkObjType ids TkOf TkColor colors','newObjType',5,'p_newObjType','myparser.py',71),
  ('colors -> TkRed','colors',1,'p_colors','myparser.py',74),
  ('colors -> TkBlue','colors',1,'p_colors','myparser.py',75),
  ('colors -> TkMagenta','colors',1,'p_colors','myparser.py',76),
  ('colors -> TkCyan','colors',1,'p_colors','myparser.py',77),
  ('colors -> TkGreen','colors',1,'p_colors','myparser.py',78),
  ('colors -> TkYellow','colors',1,'p_colors','myparser.py',79),
  ('setPlaceObjWorld -> TkPlace TkNum TkOf ids TkAt TkNum TkNum','setPlaceObjWorld',7,'p_setPlaceObjWorld','myparser.py',82),
  ('setPlaceObjWorld -> TkPlace TkNum TkOf ids TkIn TkBasketLower','setPlaceObjWorld',6,'p_setPlaceObjWorld','myparser.py',83),
  ('setPlaceObjBasket -> TkPlace TkNum TkOf ids TkIn TkBasketLower','setPlaceObjBasket',6,'p_setPlaceObjBasket','myparser.py',87),
  ('setStartPosition -> TkStart TkAt TkNum TkNum TkHeading directions','setStartPosition',6,'p_setStartPosition','myparser.py',90),
  ('setBasketCapacity -> TkBasket TkOf TkCapacity TkNum','setBasketCapacity',4,'p_setBasketCapacity','myparser.py',93),
  ('newBoolean -> TkBoolean ids TkWith TkInitial TkValue TkTrue','newBoolean',6,'p_newBoolean','myparser.py',96),
  ('newBoolean -> TkBoolean ids TkWith TkInitial TkValue TkFalse','newBoolean',6,'p_newBoolean','myparser.py',97),
  ('newGoal -> TkGoal ids TkIs TkWilly TkIs TkAt TkNum TkNum','newGoal',8,'p_newGoal','myparser.py',101),
  ('newGoal -> TkGoal ids TkIs TkNum ids TkObjectsLower TkIn TkBasket','newGoal',8,'p_newGoal','myparser.py',102),
  ('newGoal -> TkGoal ids TkIs TkNum ids TkObjectsLower TkAt TkNum TkNum','newGoal',9,'p_newGoal','myparser.py',103),
  ('finalGoal -> TkFinalG TkIs ids','finalGoal',3,'p_finalGoal','myparser.py',106),
  ('finalGoal -> TkFinalG TkIs ids TkAnd ids','finalGoal',5,'p_finalGoal','myparser.py',107),
  ('finalGoal -> TkFinalG TkIs ids TkOr ids','finalGoal',5,'p_finalGoal','myparser.py',108),
  ('finalGoal -> TkFinalG TkIs TkNot ids','finalGoal',4,'p_finalGoal','myparser.py',109),
  ('finalGoal -> TkParenL ids TkParenR','finalGoal',3,'p_finalGoal','myparser.py',110),
  ('ids -> TkId','ids',1,'p_ids','myparser.py',114),
  ('taskBlock -> TkBeginTask ids TkOn ids multiInstructions TkEndTask','taskBlock',6,'p_taskBlock','myparser.py',118),
  ('multiInstructions -> instructions','multiInstructions',1,'p_multiInstructions','myparser.py',122),
  ('multiInstructions -> empty','multiInstructions',1,'p_multiInstructions','myparser.py',123),
  ('multiInstructions -> instructions TkSemicolon multiInstructions','multiInstructions',3,'p_multiInstructions','myparser.py',124),
  ('primitiveInstructions -> TkMove','primitiveInstructions',1,'p_primitiveInstructions','myparser.py',128),
  ('primitiveInstructions -> TkTurnL','primitiveInstructions',1,'p_primitiveInstructions','myparser.py',129),
  ('primitiveInstructions -> TkTurnR','primitiveInstructions',1,'p_primitiveInstructions','myparser.py',130),
  ('primitiveInstructions -> TkPick ids','primitiveInstructions',2,'p_primitiveInstructions','myparser.py',131),
  ('primitiveInstructions -> TkDrop ids','primitiveInstructions',2,'p_primitiveInstructions','myparser.py',132),
  ('primitiveInstructions -> TkSet ids','primitiveInstructions',2,'p_primitiveInstructions','myparser.py',133),
  ('primitiveInstructions -> TkSet ids TkTo TkTrue','primitiveInstructions',4,'p_primitiveInstructions','myparser.py',134),
  ('primitiveInstructions -> TkSet ids TkTo TkFalse','primitiveInstructions',4,'p_primitiveInstructions','myparser.py',135),
  ('primitiveInstructions -> TkClear ids','primitiveInstructions',2,'p_primitiveInstructions','myparser.py',136),
  ('primitiveInstructions -> TkFlip ids','primitiveInstructions',2,'p_primitiveInstructions','myparser.py',137),
  ('primitiveInstructions -> TkTerminate','primitiveInstructions',1,'p_primitiveInstructions','myparser.py',138),
  ('booleanTests -> ids','booleanTests',1,'p_booleanTests','myparser.py',142),
  ('booleanTests -> primitiveBoolean','booleanTests',1,'p_booleanTests','myparser.py',143),
  ('booleanTests -> TkFound TkParenL ids TkParenR','booleanTests',4,'p_booleanTests','myparser.py',144),
  ('booleanTests -> TkCarrying TkParenL ids TkParenR','booleanTests',4,'p_booleanTests','myparser.py',145),
  ('booleanTests -> booleanTests TkAnd booleanTests','booleanTests',3,'p_booleanTests','myparser.py',146),
  ('booleanTests -> booleanTests TkOr booleanTests','booleanTests',3,'p_booleanTests','myparser.py',147),
  ('booleanTests -> TkNot booleanTests','booleanTests',2,'p_booleanTests','myparser.py',148),
  ('booleanTests -> TkParenL booleanTests TkParenR','booleanTests',3,'p_booleanTests','myparser.py',149),
  ('primitiveBoolean -> TkFrontCl','primitiveBoolean',1,'p_primitiveBoolean','myparser.py',153),
  ('primitiveBoolean -> TkLeftCl','primitiveBoolean',1,'p_primitiveBoolean','myparser.py',154),
  ('primitiveBoolean -> TkRightCl','primitiveBoolean',1,'p_primitiveBoolean','myparser.py',155),
  ('primitiveBoolean -> TkLookingN','primitiveBoolean',1,'p_primitiveBoolean','myparser.py',156),
  ('primitiveBoolean -> TkLookingE','primitiveBoolean',1,'p_primitiveBoolean','myparser.py',157),
  ('primitiveBoolean -> TkLookingS','primitiveBoolean',1,'p_primitiveBoolean','myparser.py',158),
  ('primitiveBoolean -> TkLookingW','primitiveBoolean',1,'p_primitiveBoolean','myparser.py',159),
  ('instructions -> primitiveInstructions','instructions',1,'p_instructions','myparser.py',163),
  ('instructions -> TkIf booleanTests TkThen instructions','instructions',4,'p_instructions','myparser.py',164),
  ('instructions -> TkIf booleanTests TkThen instructions TkElse instructions','instructions',6,'p_instructions','myparser.py',165),
  ('instructions -> TkRepeat TkNum TkTimes instructions','instructions',4,'p_instructions','myparser.py',166),
  ('instructions -> TkWhile booleanTests TkDo instructions','instructions',4,'p_instructions','myparser.py',167),
  ('instructions -> TkBegin multiInstructions TkEnd','instructions',3,'p_instructions','myparser.py',168),
  ('instructions -> TkDefine ids TkAs instructions','instructions',4,'p_instructions','myparser.py',169),
  ('directions -> TkNorth','directions',1,'p_directions','myparser.py',173),
  ('directions -> TkEast','directions',1,'p_directions','myparser.py',174),
  ('directions -> TkSouth','directions',1,'p_directions','myparser.py',175),
  ('directions -> TkWest','directions',1,'p_directions','myparser.py',176),
  ('empty -> <empty>','empty',0,'p_empty','myparser.py',181),
]
