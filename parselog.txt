   yacc.py: 362:PLY: PARSE DEBUG START
   yacc.py: 410:
   yacc.py: 411:State  : 0
   yacc.py: 435:Stack  : . LexToken(TkBeginWorld,'begin-world',1,0)
   yacc.py: 445:Action : Shift and goto state 5
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 435:Stack  : TkBeginWorld . LexToken(TkId,'maferBaila2',1,12)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : TkBeginWorld TkId . LexToken(TkObjType,'Object-type',2,24)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['maferBaila2'] and goto state 9
   yacc.py: 506:Result : <str @ 0x1b0a590ecb0> ('maferBaila2')
=======
   yacc.py: 435:Stack  : TkBeginWorld TkId . LexToken(TkObjType,'Object-type',2,24)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['maferBaila2'] and goto state 9
   yacc.py: 506:Result : <str @ 0x10db00a70> ('maferBaila2')
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 9
   yacc.py: 435:Stack  : TkBeginWorld ids . LexToken(TkObjType,'Object-type',2,24)
   yacc.py: 445:Action : Shift and goto state 27
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 435:Stack  : TkBeginWorld ids TkObjType . LexToken(TkId,'flower',2,36)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : TkBeginWorld ids TkObjType TkId . LexToken(TkOf,'of',2,43)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['flower'] and goto state 44
   yacc.py: 506:Result : <str @ 0x1b0a5d6f470> ('flower')
=======
   yacc.py: 435:Stack  : TkBeginWorld ids TkObjType TkId . LexToken(TkOf,'of',2,43)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['flower'] and goto state 44
   yacc.py: 506:Result : <str @ 0x10dd1c4c8> ('flower')
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 435:Stack  : TkBeginWorld ids TkObjType ids . LexToken(TkOf,'of',2,43)
   yacc.py: 445:Action : Shift and goto state 55
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 435:Stack  : TkBeginWorld ids TkObjType ids TkOf . LexToken(TkColor,'color',2,46)
   yacc.py: 445:Action : Shift and goto state 89
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : TkBeginWorld ids TkObjType ids TkOf TkColor . LexToken(TkYellow,'yellow',2,52)
   yacc.py: 445:Action : Shift and goto state 139
   yacc.py: 410:
   yacc.py: 411:State  : 139
<<<<<<< HEAD
   yacc.py: 434:Stack  : TkBeginWorld ids TkObjType ids TkOf TkColor TkYellow . LexToken(TkSemicolon,';',2,58)
   yacc.py: 469:Action : Reduce rule [colors -> TkYellow] with ['yellow'] and goto state 133
   yacc.py: 506:Result : <str @ 0x1b0a5d6f770> ('yellow')
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 434:Stack  : TkBeginWorld ids TkObjType ids TkOf TkColor colors . LexToken(TkSemicolon,';',2,58)
   yacc.py: 469:Action : Reduce rule [newObjType -> TkObjType ids TkOf TkColor colors] with ['Object-type','flower','of','color','yellow'] and goto state 17
   yacc.py: 506:Result : <Node @ 0x1b0a5d5d4f0> (<Node.Node object at 0x000001B0A5D5D4F0>)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : TkBeginWorld ids newObjType . LexToken(TkSemicolon,';',2,58)
   yacc.py: 469:Action : Reduce rule [worldInst -> newObjType] with [<Node @ 0x1b0a5d5d4f0>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a5d5d640> (<Node.Node object at 0x000001B0A5D5D640>)
=======
   yacc.py: 435:Stack  : TkBeginWorld ids TkObjType ids TkOf TkColor TkYellow . LexToken(TkSemicolon,';',2,58)
   yacc.py: 471:Action : Reduce rule [colors -> TkYellow] with ['yellow'] and goto state 133
   yacc.py: 506:Result : <str @ 0x10dd1c650> ('yellow')
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : TkBeginWorld ids TkObjType ids TkOf TkColor colors . LexToken(TkSemicolon,';',2,58)
   yacc.py: 471:Action : Reduce rule [newObjType -> TkObjType ids TkOf TkColor colors] with ['Object-type','flower','of','color','yellow'] and goto state 17
   yacc.py: 506:Result : <Node @ 0x10dd1c710> (<Node.Node object at 0x10dd1c710>)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 435:Stack  : TkBeginWorld ids newObjType . LexToken(TkSemicolon,';',2,58)
   yacc.py: 471:Action : Reduce rule [worldInst -> newObjType] with [<Node @ 0x10dd1c710>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10dd1c588> (<Node.Node object at 0x10dd1c588>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst . LexToken(TkSemicolon,';',2,58)
   yacc.py: 445:Action : Shift and goto state 36
   yacc.py: 410:
   yacc.py: 411:State  : 36
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon . LexToken(TkObjType,'Object-type',3,60)
   yacc.py: 445:Action : Shift and goto state 27
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon TkObjType . LexToken(TkId,'dog',3,72)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : TkBeginWorld ids worldInst TkSemicolon TkObjType TkId . LexToken(TkOf,'of',3,76)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['dog'] and goto state 44
   yacc.py: 506:Result : <str @ 0x1b0a5d6f7f0> ('dog')
=======
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon TkObjType TkId . LexToken(TkOf,'of',3,76)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['dog'] and goto state 44
   yacc.py: 506:Result : <str @ 0x10dd1c6c0> ('dog')
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon TkObjType ids . LexToken(TkOf,'of',3,76)
   yacc.py: 445:Action : Shift and goto state 55
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon TkObjType ids TkOf . LexToken(TkColor,'color',3,79)
   yacc.py: 445:Action : Shift and goto state 89
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon TkObjType ids TkOf TkColor . LexToken(TkGreen,'green',3,85)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
<<<<<<< HEAD
   yacc.py: 434:Stack  : TkBeginWorld ids worldInst TkSemicolon TkObjType ids TkOf TkColor TkGreen . LexToken(TkSemicolon,';',3,90)
   yacc.py: 469:Action : Reduce rule [colors -> TkGreen] with ['green'] and goto state 133
   yacc.py: 506:Result : <str @ 0x1b0a5d6f970> ('green')
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 434:Stack  : TkBeginWorld ids worldInst TkSemicolon TkObjType ids TkOf TkColor colors . LexToken(TkSemicolon,';',3,90)
   yacc.py: 469:Action : Reduce rule [newObjType -> TkObjType ids TkOf TkColor colors] with ['Object-type','dog','of','color','green'] and goto state 17
   yacc.py: 506:Result : <Node @ 0x1b0a5d5d700> (<Node.Node object at 0x000001B0A5D5D700>)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : TkBeginWorld ids worldInst TkSemicolon newObjType . LexToken(TkSemicolon,';',3,90)
   yacc.py: 469:Action : Reduce rule [worldInst -> newObjType] with [<Node @ 0x1b0a5d5d700>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a5d5d7c0> (<Node.Node object at 0x000001B0A5D5D7C0>)
=======
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon TkObjType ids TkOf TkColor TkGreen . LexToken(TkSemicolon,';',3,90)
   yacc.py: 471:Action : Reduce rule [colors -> TkGreen] with ['green'] and goto state 133
   yacc.py: 506:Result : <str @ 0x10dd1c8b8> ('green')
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon TkObjType ids TkOf TkColor colors . LexToken(TkSemicolon,';',3,90)
   yacc.py: 471:Action : Reduce rule [newObjType -> TkObjType ids TkOf TkColor colors] with ['Object-type','dog','of','color','green'] and goto state 17
   yacc.py: 506:Result : <Node @ 0x10dd1c898> (<Node.Node object at 0x10dd1c898>)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon newObjType . LexToken(TkSemicolon,';',3,90)
   yacc.py: 471:Action : Reduce rule [worldInst -> newObjType] with [<Node @ 0x10dd1c898>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10dd1c630> (<Node.Node object at 0x10dd1c630>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst . LexToken(TkSemicolon,';',3,90)
   yacc.py: 445:Action : Shift and goto state 36
   yacc.py: 410:
   yacc.py: 411:State  : 36
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon . LexToken(TkObjType,'Object-type',4,92)
   yacc.py: 445:Action : Shift and goto state 27
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon TkObjType . LexToken(TkId,'sky',4,104)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon TkObjType TkId . LexToken(TkOf,'of',4,108)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['sky'] and goto state 44
   yacc.py: 506:Result : <str @ 0x1b0a5d6faf0> ('sky')
=======
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon TkObjType TkId . LexToken(TkOf,'of',4,108)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['sky'] and goto state 44
   yacc.py: 506:Result : <str @ 0x10dd1c7d8> ('sky')
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon TkObjType ids . LexToken(TkOf,'of',4,108)
   yacc.py: 445:Action : Shift and goto state 55
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon TkObjType ids TkOf . LexToken(TkColor,'color',4,111)
   yacc.py: 445:Action : Shift and goto state 89
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon TkObjType ids TkOf TkColor . LexToken(TkBlue,'blue',4,117)
   yacc.py: 445:Action : Shift and goto state 135
   yacc.py: 410:
   yacc.py: 411:State  : 135
<<<<<<< HEAD
   yacc.py: 434:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon TkObjType ids TkOf TkColor TkBlue . LexToken(TkSemicolon,';',4,121)
   yacc.py: 469:Action : Reduce rule [colors -> TkBlue] with ['blue'] and goto state 133
   yacc.py: 506:Result : <str @ 0x1b0a5d6fbf0> ('blue')
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 434:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon TkObjType ids TkOf TkColor colors . LexToken(TkSemicolon,';',4,121)
   yacc.py: 469:Action : Reduce rule [newObjType -> TkObjType ids TkOf TkColor colors] with ['Object-type','sky','of','color','blue'] and goto state 17
   yacc.py: 506:Result : <Node @ 0x1b0a5d5d880> (<Node.Node object at 0x000001B0A5D5D880>)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon newObjType . LexToken(TkSemicolon,';',4,121)
   yacc.py: 469:Action : Reduce rule [worldInst -> newObjType] with [<Node @ 0x1b0a5d5d880>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a5d5d940> (<Node.Node object at 0x000001B0A5D5D940>)
=======
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon TkObjType ids TkOf TkColor TkBlue . LexToken(TkSemicolon,';',4,121)
   yacc.py: 471:Action : Reduce rule [colors -> TkBlue] with ['blue'] and goto state 133
   yacc.py: 506:Result : <str @ 0x10dd1ca78> ('blue')
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon TkObjType ids TkOf TkColor colors . LexToken(TkSemicolon,';',4,121)
   yacc.py: 471:Action : Reduce rule [newObjType -> TkObjType ids TkOf TkColor colors] with ['Object-type','sky','of','color','blue'] and goto state 17
   yacc.py: 506:Result : <Node @ 0x10dd1ca58> (<Node.Node object at 0x10dd1ca58>)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon newObjType . LexToken(TkSemicolon,';',4,121)
   yacc.py: 471:Action : Reduce rule [worldInst -> newObjType] with [<Node @ 0x10dd1ca58>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10dd1c7b8> (<Node.Node object at 0x10dd1c7b8>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst . LexToken(TkSemicolon,';',4,121)
   yacc.py: 445:Action : Shift and goto state 36
   yacc.py: 410:
   yacc.py: 411:State  : 36
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon . LexToken(TkBoolean,'Boolean',5,123)
   yacc.py: 445:Action : Shift and goto state 31
   yacc.py: 410:
   yacc.py: 411:State  : 31
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon TkBoolean . LexToken(TkId,'willyhappy',5,131)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon TkBoolean TkId . LexToken(TkWith,'with',5,142)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['willyhappy'] and goto state 48
   yacc.py: 506:Result : <str @ 0x1b0a5d6fd70> ('willyhappy')
=======
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon TkBoolean TkId . LexToken(TkWith,'with',5,142)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['willyhappy'] and goto state 48
   yacc.py: 506:Result : <str @ 0x10dd0af30> ('willyhappy')
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon TkBoolean ids . LexToken(TkWith,'with',5,142)
   yacc.py: 445:Action : Shift and goto state 59
   yacc.py: 410:
   yacc.py: 411:State  : 59
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon TkBoolean ids TkWith . LexToken(TkInitial,'initial',5,147)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon TkBoolean ids TkWith TkInitial . LexToken(TkValue,'value',5,155)
   yacc.py: 445:Action : Shift and goto state 143
   yacc.py: 410:
   yacc.py: 411:State  : 143
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon TkBoolean ids TkWith TkInitial TkValue . LexToken(TkTrue,'true',5,161)
   yacc.py: 445:Action : Shift and goto state 167
   yacc.py: 410:
   yacc.py: 411:State  : 167
<<<<<<< HEAD
   yacc.py: 434:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon TkBoolean ids TkWith TkInitial TkValue TkTrue . LexToken(TkSemicolon,';',5,165)
   yacc.py: 469:Action : Reduce rule [newBoolean -> TkBoolean ids TkWith TkInitial TkValue TkTrue] with ['Boolean','willyhappy','with','initial','value','true'] and goto state 21
   yacc.py: 506:Result : <Node @ 0x1b0a5d5d400> (<Node.Node object at 0x000001B0A5D5D400>)
   yacc.py: 410:
   yacc.py: 411:State  : 21
   yacc.py: 434:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon newBoolean . LexToken(TkSemicolon,';',5,165)
   yacc.py: 469:Action : Reduce rule [worldInst -> newBoolean] with [<Node @ 0x1b0a5d5d400>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a5d5d460> (<Node.Node object at 0x000001B0A5D5D460>)
=======
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon TkBoolean ids TkWith TkInitial TkValue TkTrue . LexToken(TkSemicolon,';',5,165)
   yacc.py: 471:Action : Reduce rule [newBoolean -> TkBoolean ids TkWith TkInitial TkValue TkTrue] with ['Boolean','willyhappy','with','initial','value','true'] and goto state 21
   yacc.py: 506:Result : <Node @ 0x10dd1cbe0> (<Node.Node object at 0x10dd1cbe0>)
   yacc.py: 410:
   yacc.py: 411:State  : 21
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon newBoolean . LexToken(TkSemicolon,';',5,165)
   yacc.py: 471:Action : Reduce rule [worldInst -> newBoolean] with [<Node @ 0x10dd1cbe0>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10dd1cd68> (<Node.Node object at 0x10dd1cd68>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon worldInst . LexToken(TkSemicolon,';',5,165)
   yacc.py: 445:Action : Shift and goto state 36
   yacc.py: 410:
   yacc.py: 411:State  : 36
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon . LexToken(TkBoolean,'Boolean',6,167)
   yacc.py: 445:Action : Shift and goto state 31
   yacc.py: 410:
   yacc.py: 411:State  : 31
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon TkBoolean . LexToken(TkId,'willycanlearn',6,175)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon TkBoolean TkId . LexToken(TkWith,'with',6,189)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['willycanlearn'] and goto state 48
   yacc.py: 506:Result : <str @ 0x1b0a5d7a0f0> ('willycanlearn')
=======
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon TkBoolean TkId . LexToken(TkWith,'with',6,189)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['willycanlearn'] and goto state 48
   yacc.py: 506:Result : <str @ 0x10dd0ad70> ('willycanlearn')
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon TkBoolean ids . LexToken(TkWith,'with',6,189)
   yacc.py: 445:Action : Shift and goto state 59
   yacc.py: 410:
   yacc.py: 411:State  : 59
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon TkBoolean ids TkWith . LexToken(TkInitial,'initial',6,194)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon TkBoolean ids TkWith TkInitial . LexToken(TkValue,'value',6,202)
   yacc.py: 445:Action : Shift and goto state 143
   yacc.py: 410:
   yacc.py: 411:State  : 143
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon TkBoolean ids TkWith TkInitial TkValue . LexToken(TkFalse,'false',6,208)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
<<<<<<< HEAD
   yacc.py: 434:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon TkBoolean ids TkWith TkInitial TkValue TkFalse . LexToken(TkSemicolon,';',6,213)
   yacc.py: 469:Action : Reduce rule [newBoolean -> TkBoolean ids TkWith TkInitial TkValue TkFalse] with ['Boolean','willycanlearn','with','initial','value','false'] and goto state 21
   yacc.py: 506:Result : <Node @ 0x1b0a5d5d520> (<Node.Node object at 0x000001B0A5D5D520>)
   yacc.py: 410:
   yacc.py: 411:State  : 21
   yacc.py: 434:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon newBoolean . LexToken(TkSemicolon,';',6,213)
   yacc.py: 469:Action : Reduce rule [worldInst -> newBoolean] with [<Node @ 0x1b0a5d5d520>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a5d5d670> (<Node.Node object at 0x000001B0A5D5D670>)
=======
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon TkBoolean ids TkWith TkInitial TkValue TkFalse . LexToken(TkSemicolon,';',6,213)
   yacc.py: 471:Action : Reduce rule [newBoolean -> TkBoolean ids TkWith TkInitial TkValue TkFalse] with ['Boolean','willycanlearn','with','initial','value','false'] and goto state 21
   yacc.py: 506:Result : <Node @ 0x10dd1cc50> (<Node.Node object at 0x10dd1cc50>)
   yacc.py: 410:
   yacc.py: 411:State  : 21
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon newBoolean . LexToken(TkSemicolon,';',6,213)
   yacc.py: 471:Action : Reduce rule [worldInst -> newBoolean] with [<Node @ 0x10dd1cc50>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10dd1cf60> (<Node.Node object at 0x10dd1cf60>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon worldInst . LexToken(TkSemicolon,';',6,213)
   yacc.py: 445:Action : Shift and goto state 36
   yacc.py: 410:
   yacc.py: 411:State  : 36
<<<<<<< HEAD
   yacc.py: 434:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon . LexToken(TkEndWorld,'end-world',7,215)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst TkSemicolon] with [<Node @ 0x1b0a5d5d670>,';'] and goto state 52
   yacc.py: 506:Result : <Node @ 0x1b0a5d5d310> (<Node.Node object at 0x000001B0A5D5D310>)
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 430:Defaulted state 52: Reduce using 6
   yacc.py: 434:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon worldInstSet . LexToken(TkEndWorld,'end-world',7,215)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst TkSemicolon worldInstSet] with [<Node @ 0x1b0a5d5d460>,';',<Node @ 0x1b0a5d5d310>] and goto state 52
   yacc.py: 506:Result : <Node @ 0x1b0a5d5dca0> (<Node.Node object at 0x000001B0A5D5DCA0>)
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 430:Defaulted state 52: Reduce using 6
   yacc.py: 434:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon worldInstSet . LexToken(TkEndWorld,'end-world',7,215)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst TkSemicolon worldInstSet] with [<Node @ 0x1b0a5d5d940>,';',<Node @ 0x1b0a5d5dca0>] and goto state 52
   yacc.py: 506:Result : <Node @ 0x1b0a5d5daf0> (<Node.Node object at 0x000001B0A5D5DAF0>)
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 430:Defaulted state 52: Reduce using 6
   yacc.py: 434:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInstSet . LexToken(TkEndWorld,'end-world',7,215)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst TkSemicolon worldInstSet] with [<Node @ 0x1b0a5d5d7c0>,';',<Node @ 0x1b0a5d5daf0>] and goto state 52
   yacc.py: 506:Result : <Node @ 0x1b0a5d5d910> (<Node.Node object at 0x000001B0A5D5D910>)
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 430:Defaulted state 52: Reduce using 6
   yacc.py: 434:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInstSet . LexToken(TkEndWorld,'end-world',7,215)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst TkSemicolon worldInstSet] with [<Node @ 0x1b0a5d5d640>,';',<Node @ 0x1b0a5d5d910>] and goto state 12
   yacc.py: 506:Result : <Node @ 0x1b0a5d5d7f0> (<Node.Node object at 0x000001B0A5D5D7F0>)
=======
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon . LexToken(TkEndWorld,'end-world',7,215)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst TkSemicolon] with [<Node @ 0x10dd1cf60>,';'] and goto state 52
   yacc.py: 506:Result : <Node @ 0x10dd1c5f8> (<Node.Node object at 0x10dd1c5f8>)
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 430:Defaulted state 52: Reduce using 6
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon worldInstSet . LexToken(TkEndWorld,'end-world',7,215)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst TkSemicolon worldInstSet] with [<Node @ 0x10dd1cd68>,';',<Node @ 0x10dd1c5f8>] and goto state 52
   yacc.py: 506:Result : <Node @ 0x10dd1cf98> (<Node.Node object at 0x10dd1cf98>)
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 430:Defaulted state 52: Reduce using 6
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInst TkSemicolon worldInstSet . LexToken(TkEndWorld,'end-world',7,215)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst TkSemicolon worldInstSet] with [<Node @ 0x10dd1c7b8>,';',<Node @ 0x10dd1cf98>] and goto state 52
   yacc.py: 506:Result : <Node @ 0x10dd1cda0> (<Node.Node object at 0x10dd1cda0>)
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 430:Defaulted state 52: Reduce using 6
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInst TkSemicolon worldInstSet . LexToken(TkEndWorld,'end-world',7,215)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst TkSemicolon worldInstSet] with [<Node @ 0x10dd1c630>,';',<Node @ 0x10dd1cda0>] and goto state 52
   yacc.py: 506:Result : <Node @ 0x10dd1cba8> (<Node.Node object at 0x10dd1cba8>)
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 430:Defaulted state 52: Reduce using 6
   yacc.py: 435:Stack  : TkBeginWorld ids worldInst TkSemicolon worldInstSet . LexToken(TkEndWorld,'end-world',7,215)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst TkSemicolon worldInstSet] with [<Node @ 0x10dd1c588>,';',<Node @ 0x10dd1cba8>] and goto state 12
   yacc.py: 506:Result : <Node @ 0x10dd1c9e8> (<Node.Node object at 0x10dd1c9e8>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 12
   yacc.py: 435:Stack  : TkBeginWorld ids worldInstSet . LexToken(TkEndWorld,'end-world',7,215)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
<<<<<<< HEAD
   yacc.py: 434:Stack  : TkBeginWorld ids worldInstSet TkEndWorld . LexToken(TkBeginWorld,'begin-world',10,258)
   yacc.py: 469:Action : Reduce rule [worldBlock -> TkBeginWorld ids worldInstSet TkEndWorld] with ['begin-world','maferBaila2',<Node @ 0x1b0a5d5d7f0>,'end-world'] and goto state 3
   yacc.py: 506:Result : <Node @ 0x1b0a5d5d790> (<Node.Node object at 0x000001B0A5D5D790>)
=======
   yacc.py: 435:Stack  : TkBeginWorld ids worldInstSet TkEndWorld . LexToken(TkBeginWorld,'begin-world',10,258)
   yacc.py: 471:Action : Reduce rule [worldBlock -> TkBeginWorld ids worldInstSet TkEndWorld] with ['begin-world','maferBaila2',<Node @ 0x10dd1c9e8>,'end-world'] and goto state 3
   yacc.py: 506:Result : <Node @ 0x10dd1c828> (<Node.Node object at 0x10dd1c828>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 3
   yacc.py: 435:Stack  : worldBlock . LexToken(TkBeginWorld,'begin-world',10,258)
   yacc.py: 445:Action : Shift and goto state 5
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 435:Stack  : worldBlock TkBeginWorld . LexToken(TkId,'world1',10,270)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld TkId . LexToken(TkWorld,'World',12,311)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['world1'] and goto state 9
   yacc.py: 506:Result : <str @ 0x1b0a5d7a2f0> ('world1')
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld TkId . LexToken(TkWorld,'World',12,311)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['world1'] and goto state 9
   yacc.py: 506:Result : <str @ 0x10dd1cce0> ('world1')
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 9
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids . LexToken(TkWorld,'World',12,311)
   yacc.py: 445:Action : Shift and goto state 24
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids TkWorld . LexToken(TkNum,8,12,317)
   yacc.py: 445:Action : Shift and goto state 38
   yacc.py: 410:
   yacc.py: 411:State  : 38
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids TkWorld TkNum . LexToken(TkNum,4,12,319)
   yacc.py: 445:Action : Shift and goto state 53
   yacc.py: 410:
   yacc.py: 411:State  : 53
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids TkWorld TkNum TkNum . LexToken(TkWall,'Wall',14,333)
   yacc.py: 469:Action : Reduce rule [worldSet -> TkWorld TkNum TkNum] with ['World',8,4] and goto state 15
   yacc.py: 506:Result : <Node @ 0x1b0a5d5d5b0> (<Node.Node object at 0x000001B0A5D5D5B0>)
   yacc.py: 410:
   yacc.py: 411:State  : 15
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldSet . LexToken(TkWall,'Wall',14,333)
   yacc.py: 469:Action : Reduce rule [worldInst -> worldSet] with [<Node @ 0x1b0a5d5d5b0>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a58edb20> (<Node.Node object at 0x000001B0A58EDB20>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids TkWorld TkNum TkNum . LexToken(TkWall,'Wall',14,333)
   yacc.py: 471:Action : Reduce rule [worldSet -> TkWorld TkNum TkNum] with ['World',8,4] and goto state 15
   yacc.py: 506:Result : <Node @ 0x10dd1ccc0> (<Node.Node object at 0x10dd1ccc0>)
   yacc.py: 410:
   yacc.py: 411:State  : 15
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldSet . LexToken(TkWall,'Wall',14,333)
   yacc.py: 471:Action : Reduce rule [worldInst -> worldSet] with [<Node @ 0x10dd1ccc0>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10dd1cd30> (<Node.Node object at 0x10dd1cd30>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst . LexToken(TkWall,'Wall',14,333)
   yacc.py: 445:Action : Shift and goto state 26
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst TkWall . LexToken(TkNorth,'north',14,338)
   yacc.py: 445:Action : Shift and goto state 40
   yacc.py: 410:
   yacc.py: 411:State  : 40
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst TkWall TkNorth . LexToken(TkFrom,'from',14,344)
   yacc.py: 469:Action : Reduce rule [directions -> TkNorth] with ['north'] and goto state 39
   yacc.py: 506:Result : <Node @ 0x1b0a58ed6a0> (<Node.Node object at 0x000001B0A58ED6A0>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst TkWall TkNorth . LexToken(TkFrom,'from',14,344)
   yacc.py: 471:Action : Reduce rule [directions -> TkNorth] with ['north'] and goto state 39
   yacc.py: 506:Result : <Node @ 0x10dbe9278> (<Node.Node object at 0x10dbe9278>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst TkWall directions . LexToken(TkFrom,'from',14,344)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst TkWall directions TkFrom . LexToken(TkNum,1,14,349)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst TkWall directions TkFrom TkNum . LexToken(TkNum,4,14,351)
   yacc.py: 445:Action : Shift and goto state 132
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst TkWall directions TkFrom TkNum TkNum . LexToken(TkTo,'to',14,353)
   yacc.py: 445:Action : Shift and goto state 163
   yacc.py: 410:
   yacc.py: 411:State  : 163
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst TkWall directions TkFrom TkNum TkNum TkTo . LexToken(TkNum,1,14,356)
   yacc.py: 445:Action : Shift and goto state 183
   yacc.py: 410:
   yacc.py: 411:State  : 183
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst TkWall directions TkFrom TkNum TkNum TkTo TkNum . LexToken(TkNum,2,14,358)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst TkWall directions TkFrom TkNum TkNum TkTo TkNum TkNum . LexToken(TkWall,'Wall',15,360)
   yacc.py: 469:Action : Reduce rule [wallSet -> TkWall directions TkFrom TkNum TkNum TkTo TkNum TkNum] with ['Wall',<Node @ 0x1b0a58ed6a0>,'from',1,4,'to',1,2] and goto state 16
   yacc.py: 506:Result : <NoneType @ 0x7ffbf8bf4880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst wallSet . LexToken(TkWall,'Wall',15,360)
   yacc.py: 469:Action : Reduce rule [worldInst -> wallSet] with [None] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a58ed6a0> (<Node.Node object at 0x000001B0A58ED6A0>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst TkWall directions TkFrom TkNum TkNum TkTo TkNum TkNum . LexToken(TkWall,'Wall',15,360)
   yacc.py: 471:Action : Reduce rule [wallSet -> TkWall directions TkFrom TkNum TkNum TkTo TkNum TkNum] with ['Wall',<Node @ 0x10dbe9278>,'from',1,4,'to',1,2] and goto state 16
   yacc.py: 506:Result : <NoneType @ 0x10d7cd068> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst wallSet . LexToken(TkWall,'Wall',15,360)
   yacc.py: 471:Action : Reduce rule [worldInst -> wallSet] with [None] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10db3ba20> (<Node.Node object at 0x10db3ba20>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst . LexToken(TkWall,'Wall',15,360)
   yacc.py: 445:Action : Shift and goto state 26
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst TkWall . LexToken(TkWest,'west',15,365)
   yacc.py: 445:Action : Shift and goto state 43
   yacc.py: 410:
   yacc.py: 411:State  : 43
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst TkWall TkWest . LexToken(TkFrom,'from',15,370)
   yacc.py: 469:Action : Reduce rule [directions -> TkWest] with ['west'] and goto state 39
   yacc.py: 506:Result : <Node @ 0x1b0a5d5dc10> (<Node.Node object at 0x000001B0A5D5DC10>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst TkWall TkWest . LexToken(TkFrom,'from',15,370)
   yacc.py: 471:Action : Reduce rule [directions -> TkWest] with ['west'] and goto state 39
   yacc.py: 506:Result : <Node @ 0x10dd27080> (<Node.Node object at 0x10dd27080>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst TkWall directions . LexToken(TkFrom,'from',15,370)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst TkWall directions TkFrom . LexToken(TkNum,1,15,375)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst TkWall directions TkFrom TkNum . LexToken(TkNum,2,15,377)
   yacc.py: 445:Action : Shift and goto state 132
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst TkWall directions TkFrom TkNum TkNum . LexToken(TkTo,'to',15,379)
   yacc.py: 445:Action : Shift and goto state 163
   yacc.py: 410:
   yacc.py: 411:State  : 163
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst TkWall directions TkFrom TkNum TkNum TkTo . LexToken(TkNum,5,15,382)
   yacc.py: 445:Action : Shift and goto state 183
   yacc.py: 410:
   yacc.py: 411:State  : 183
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst TkWall directions TkFrom TkNum TkNum TkTo TkNum . LexToken(TkNum,2,15,384)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst TkWall directions TkFrom TkNum TkNum TkTo TkNum TkNum . LexToken(TkWall,'Wall',16,386)
   yacc.py: 469:Action : Reduce rule [wallSet -> TkWall directions TkFrom TkNum TkNum TkTo TkNum TkNum] with ['Wall',<Node @ 0x1b0a5d5dc10>,'from',1,2,'to',5,2] and goto state 16
   yacc.py: 506:Result : <NoneType @ 0x7ffbf8bf4880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst wallSet . LexToken(TkWall,'Wall',16,386)
   yacc.py: 469:Action : Reduce rule [worldInst -> wallSet] with [None] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a5d5df40> (<Node.Node object at 0x000001B0A5D5DF40>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst TkWall directions TkFrom TkNum TkNum TkTo TkNum TkNum . LexToken(TkWall,'Wall',16,386)
   yacc.py: 471:Action : Reduce rule [wallSet -> TkWall directions TkFrom TkNum TkNum TkTo TkNum TkNum] with ['Wall',<Node @ 0x10dd27080>,'from',1,2,'to',5,2] and goto state 16
   yacc.py: 506:Result : <NoneType @ 0x10d7cd068> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst wallSet . LexToken(TkWall,'Wall',16,386)
   yacc.py: 471:Action : Reduce rule [worldInst -> wallSet] with [None] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10dbe9278> (<Node.Node object at 0x10dbe9278>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst . LexToken(TkWall,'Wall',16,386)
   yacc.py: 445:Action : Shift and goto state 26
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst TkWall . LexToken(TkSouth,'south',16,391)
   yacc.py: 445:Action : Shift and goto state 42
   yacc.py: 410:
   yacc.py: 411:State  : 42
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst TkWall TkSouth . LexToken(TkFrom,'from',16,397)
   yacc.py: 469:Action : Reduce rule [directions -> TkSouth] with ['south'] and goto state 39
   yacc.py: 506:Result : <Node @ 0x1b0a5d5dd60> (<Node.Node object at 0x000001B0A5D5DD60>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst TkWall TkSouth . LexToken(TkFrom,'from',16,397)
   yacc.py: 471:Action : Reduce rule [directions -> TkSouth] with ['south'] and goto state 39
   yacc.py: 506:Result : <Node @ 0x10dd27128> (<Node.Node object at 0x10dd27128>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst TkWall directions . LexToken(TkFrom,'from',16,397)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst TkWall directions TkFrom . LexToken(TkNum,7,16,402)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst TkWall directions TkFrom TkNum . LexToken(TkNum,2,16,404)
   yacc.py: 445:Action : Shift and goto state 132
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst TkWall directions TkFrom TkNum TkNum . LexToken(TkTo,'to',16,406)
   yacc.py: 445:Action : Shift and goto state 163
   yacc.py: 410:
   yacc.py: 411:State  : 163
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst TkWall directions TkFrom TkNum TkNum TkTo . LexToken(TkNum,7,16,409)
   yacc.py: 445:Action : Shift and goto state 183
   yacc.py: 410:
   yacc.py: 411:State  : 183
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst TkWall directions TkFrom TkNum TkNum TkTo TkNum . LexToken(TkNum,3,16,411)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst TkWall directions TkFrom TkNum TkNum TkTo TkNum TkNum . LexToken(TkObjType,'Object-type',18,425)
   yacc.py: 469:Action : Reduce rule [wallSet -> TkWall directions TkFrom TkNum TkNum TkTo TkNum TkNum] with ['Wall',<Node @ 0x1b0a5d5dd60>,'from',7,2,'to',7,3] and goto state 16
   yacc.py: 506:Result : <NoneType @ 0x7ffbf8bf4880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst wallSet . LexToken(TkObjType,'Object-type',18,425)
   yacc.py: 469:Action : Reduce rule [worldInst -> wallSet] with [None] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a5d5df70> (<Node.Node object at 0x000001B0A5D5DF70>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst TkWall directions TkFrom TkNum TkNum TkTo TkNum TkNum . LexToken(TkObjType,'Object-type',18,425)
   yacc.py: 471:Action : Reduce rule [wallSet -> TkWall directions TkFrom TkNum TkNum TkTo TkNum TkNum] with ['Wall',<Node @ 0x10dd27128>,'from',7,2,'to',7,3] and goto state 16
   yacc.py: 506:Result : <NoneType @ 0x10d7cd068> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst wallSet . LexToken(TkObjType,'Object-type',18,425)
   yacc.py: 471:Action : Reduce rule [worldInst -> wallSet] with [None] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10dd1cac8> (<Node.Node object at 0x10dd1cac8>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst . LexToken(TkObjType,'Object-type',18,425)
   yacc.py: 445:Action : Shift and goto state 27
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst TkObjType . LexToken(TkId,'flower',18,437)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst TkObjType TkId . LexToken(TkOf,'of',18,444)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['flower'] and goto state 44
   yacc.py: 506:Result : <str @ 0x1b0a5d7a530> ('flower')
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst TkObjType TkId . LexToken(TkOf,'of',18,444)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['flower'] and goto state 44
   yacc.py: 506:Result : <str @ 0x10dd27180> ('flower')
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst TkObjType ids . LexToken(TkOf,'of',18,444)
   yacc.py: 445:Action : Shift and goto state 55
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst TkObjType ids TkOf . LexToken(TkColor,'color',18,447)
   yacc.py: 445:Action : Shift and goto state 89
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor . LexToken(TkYellow,'yellow',18,453)
   yacc.py: 445:Action : Shift and goto state 139
   yacc.py: 410:
   yacc.py: 411:State  : 139
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor TkYellow . LexToken(TkObjType,'Object-type',19,460)
   yacc.py: 469:Action : Reduce rule [colors -> TkYellow] with ['yellow'] and goto state 133
   yacc.py: 506:Result : <str @ 0x1b0a5d7a6f0> ('yellow')
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor colors . LexToken(TkObjType,'Object-type',19,460)
   yacc.py: 469:Action : Reduce rule [newObjType -> TkObjType ids TkOf TkColor colors] with ['Object-type','flower','of','color','yellow'] and goto state 17
   yacc.py: 506:Result : <Node @ 0x1b0a5d5ddf0> (<Node.Node object at 0x000001B0A5D5DDF0>)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst newObjType . LexToken(TkObjType,'Object-type',19,460)
   yacc.py: 469:Action : Reduce rule [worldInst -> newObjType] with [<Node @ 0x1b0a5d5ddf0>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a5d5dfa0> (<Node.Node object at 0x000001B0A5D5DFA0>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor TkYellow . LexToken(TkObjType,'Object-type',19,460)
   yacc.py: 471:Action : Reduce rule [colors -> TkYellow] with ['yellow'] and goto state 133
   yacc.py: 506:Result : <str @ 0x10dd27260> ('yellow')
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor colors . LexToken(TkObjType,'Object-type',19,460)
   yacc.py: 471:Action : Reduce rule [newObjType -> TkObjType ids TkOf TkColor colors] with ['Object-type','flower','of','color','yellow'] and goto state 17
   yacc.py: 506:Result : <Node @ 0x10dd27048> (<Node.Node object at 0x10dd27048>)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst newObjType . LexToken(TkObjType,'Object-type',19,460)
   yacc.py: 471:Action : Reduce rule [worldInst -> newObjType] with [<Node @ 0x10dd27048>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10dd1cf28> (<Node.Node object at 0x10dd1cf28>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst . LexToken(TkObjType,'Object-type',19,460)
   yacc.py: 445:Action : Shift and goto state 27
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst TkObjType . LexToken(TkId,'mirror',19,472)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst TkObjType TkId . LexToken(TkOf,'of',19,479)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['mirror'] and goto state 44
   yacc.py: 506:Result : <str @ 0x1b0a5d7a730> ('mirror')
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst TkObjType TkId . LexToken(TkOf,'of',19,479)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['mirror'] and goto state 44
   yacc.py: 506:Result : <str @ 0x10dd270d8> ('mirror')
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst TkObjType ids . LexToken(TkOf,'of',19,479)
   yacc.py: 445:Action : Shift and goto state 55
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf . LexToken(TkColor,'color',19,482)
   yacc.py: 445:Action : Shift and goto state 89
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor . LexToken(TkGreen,'green',19,488)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor TkGreen . LexToken(TkObjType,'Object-type',20,494)
   yacc.py: 469:Action : Reduce rule [colors -> TkGreen] with ['green'] and goto state 133
   yacc.py: 506:Result : <str @ 0x1b0a5d7a830> ('green')
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor colors . LexToken(TkObjType,'Object-type',20,494)
   yacc.py: 469:Action : Reduce rule [newObjType -> TkObjType ids TkOf TkColor colors] with ['Object-type','mirror','of','color','green'] and goto state 17
   yacc.py: 506:Result : <Node @ 0x1b0a5d5dee0> (<Node.Node object at 0x000001B0A5D5DEE0>)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst newObjType . LexToken(TkObjType,'Object-type',20,494)
   yacc.py: 469:Action : Reduce rule [worldInst -> newObjType] with [<Node @ 0x1b0a5d5dee0>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a5d5de50> (<Node.Node object at 0x000001B0A5D5DE50>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor TkGreen . LexToken(TkObjType,'Object-type',20,494)
   yacc.py: 471:Action : Reduce rule [colors -> TkGreen] with ['green'] and goto state 133
   yacc.py: 506:Result : <str @ 0x10dd27458> ('green')
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor colors . LexToken(TkObjType,'Object-type',20,494)
   yacc.py: 471:Action : Reduce rule [newObjType -> TkObjType ids TkOf TkColor colors] with ['Object-type','mirror','of','color','green'] and goto state 17
   yacc.py: 506:Result : <Node @ 0x10dd27208> (<Node.Node object at 0x10dd27208>)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst newObjType . LexToken(TkObjType,'Object-type',20,494)
   yacc.py: 471:Action : Reduce rule [worldInst -> newObjType] with [<Node @ 0x10dd27208>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10dd272b0> (<Node.Node object at 0x10dd272b0>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst . LexToken(TkObjType,'Object-type',20,494)
   yacc.py: 445:Action : Shift and goto state 27
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst TkObjType . LexToken(TkId,'table',20,506)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst TkObjType TkId . LexToken(TkOf,'of',20,512)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['table'] and goto state 44
   yacc.py: 506:Result : <str @ 0x1b0a5d7a930> ('table')
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst TkObjType TkId . LexToken(TkOf,'of',20,512)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['table'] and goto state 44
   yacc.py: 506:Result : <str @ 0x10dd273e8> ('table')
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst TkObjType ids . LexToken(TkOf,'of',20,512)
   yacc.py: 445:Action : Shift and goto state 55
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf . LexToken(TkColor,'color',20,515)
   yacc.py: 445:Action : Shift and goto state 89
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor . LexToken(TkCyan,'cyan',20,521)
   yacc.py: 445:Action : Shift and goto state 137
   yacc.py: 410:
   yacc.py: 411:State  : 137
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor TkCyan . LexToken(TkObjType,'Object-type',21,526)
   yacc.py: 469:Action : Reduce rule [colors -> TkCyan] with ['cyan'] and goto state 133
   yacc.py: 506:Result : <str @ 0x1b0a5d7aa70> ('cyan')
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor colors . LexToken(TkObjType,'Object-type',21,526)
   yacc.py: 469:Action : Reduce rule [newObjType -> TkObjType ids TkOf TkColor colors] with ['Object-type','table','of','color','cyan'] and goto state 17
   yacc.py: 506:Result : <Node @ 0x1b0a5d79220> (<Node.Node object at 0x000001B0A5D79220>)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst newObjType . LexToken(TkObjType,'Object-type',21,526)
   yacc.py: 469:Action : Reduce rule [worldInst -> newObjType] with [<Node @ 0x1b0a5d79220>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a5d5dc10> (<Node.Node object at 0x000001B0A5D5DC10>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor TkCyan . LexToken(TkObjType,'Object-type',21,526)
   yacc.py: 471:Action : Reduce rule [colors -> TkCyan] with ['cyan'] and goto state 133
   yacc.py: 506:Result : <str @ 0x10dd27538> ('cyan')
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor colors . LexToken(TkObjType,'Object-type',21,526)
   yacc.py: 471:Action : Reduce rule [newObjType -> TkObjType ids TkOf TkColor colors] with ['Object-type','table','of','color','cyan'] and goto state 17
   yacc.py: 506:Result : <Node @ 0x10dd27320> (<Node.Node object at 0x10dd27320>)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst newObjType . LexToken(TkObjType,'Object-type',21,526)
   yacc.py: 471:Action : Reduce rule [worldInst -> newObjType] with [<Node @ 0x10dd27320>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10dd274a8> (<Node.Node object at 0x10dd274a8>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst . LexToken(TkObjType,'Object-type',21,526)
   yacc.py: 445:Action : Shift and goto state 27
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType . LexToken(TkId,'umbrella',21,538)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType TkId . LexToken(TkOf,'of',21,547)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['umbrella'] and goto state 44
   yacc.py: 506:Result : <str @ 0x1b0a5d7ab70> ('umbrella')
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType TkId . LexToken(TkOf,'of',21,547)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['umbrella'] and goto state 44
   yacc.py: 506:Result : <str @ 0x10dd0abf0> ('umbrella')
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType ids . LexToken(TkOf,'of',21,547)
   yacc.py: 445:Action : Shift and goto state 55
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf . LexToken(TkColor,'color',21,550)
   yacc.py: 445:Action : Shift and goto state 89
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor . LexToken(TkMagenta,'magenta',21,556)
   yacc.py: 445:Action : Shift and goto state 136
   yacc.py: 410:
   yacc.py: 411:State  : 136
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor TkMagenta . LexToken(TkObjType,'Object-type',22,564)
   yacc.py: 469:Action : Reduce rule [colors -> TkMagenta] with ['magenta'] and goto state 133
   yacc.py: 506:Result : <str @ 0x1b0a5d7acb0> ('magenta')
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor colors . LexToken(TkObjType,'Object-type',22,564)
   yacc.py: 469:Action : Reduce rule [newObjType -> TkObjType ids TkOf TkColor colors] with ['Object-type','umbrella','of','color','magenta'] and goto state 17
   yacc.py: 506:Result : <Node @ 0x1b0a5d79340> (<Node.Node object at 0x000001B0A5D79340>)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst newObjType . LexToken(TkObjType,'Object-type',22,564)
   yacc.py: 469:Action : Reduce rule [worldInst -> newObjType] with [<Node @ 0x1b0a5d79340>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a5d5dbb0> (<Node.Node object at 0x000001B0A5D5DBB0>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor TkMagenta . LexToken(TkObjType,'Object-type',22,564)
   yacc.py: 471:Action : Reduce rule [colors -> TkMagenta] with ['magenta'] and goto state 133
   yacc.py: 506:Result : <str @ 0x10dd27688> ('magenta')
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor colors . LexToken(TkObjType,'Object-type',22,564)
   yacc.py: 471:Action : Reduce rule [newObjType -> TkObjType ids TkOf TkColor colors] with ['Object-type','umbrella','of','color','magenta'] and goto state 17
   yacc.py: 506:Result : <Node @ 0x10dd276d8> (<Node.Node object at 0x10dd276d8>)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst newObjType . LexToken(TkObjType,'Object-type',22,564)
   yacc.py: 471:Action : Reduce rule [worldInst -> newObjType] with [<Node @ 0x10dd276d8>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10dd275f8> (<Node.Node object at 0x10dd275f8>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst . LexToken(TkObjType,'Object-type',22,564)
   yacc.py: 445:Action : Shift and goto state 27
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType . LexToken(TkId,'heart',22,576)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType TkId . LexToken(TkOf,'of',22,582)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['heart'] and goto state 44
   yacc.py: 506:Result : <str @ 0x1b0a5d7adb0> ('heart')
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType TkId . LexToken(TkOf,'of',22,582)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['heart'] and goto state 44
   yacc.py: 506:Result : <str @ 0x10dd27570> ('heart')
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType ids . LexToken(TkOf,'of',22,582)
   yacc.py: 445:Action : Shift and goto state 55
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf . LexToken(TkColor,'color',22,585)
   yacc.py: 445:Action : Shift and goto state 89
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor . LexToken(TkRed,'red',22,591)
   yacc.py: 445:Action : Shift and goto state 134
   yacc.py: 410:
   yacc.py: 411:State  : 134
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor TkRed . LexToken(TkObjType,'Object-type',23,595)
   yacc.py: 469:Action : Reduce rule [colors -> TkRed] with ['red'] and goto state 133
   yacc.py: 506:Result : <str @ 0x1b0a5d7aef0> ('red')
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor colors . LexToken(TkObjType,'Object-type',23,595)
   yacc.py: 469:Action : Reduce rule [newObjType -> TkObjType ids TkOf TkColor colors] with ['Object-type','heart','of','color','red'] and goto state 17
   yacc.py: 506:Result : <Node @ 0x1b0a5d79460> (<Node.Node object at 0x000001B0A5D79460>)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst newObjType . LexToken(TkObjType,'Object-type',23,595)
   yacc.py: 469:Action : Reduce rule [worldInst -> newObjType] with [<Node @ 0x1b0a5d79460>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a5d5db80> (<Node.Node object at 0x000001B0A5D5DB80>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor TkRed . LexToken(TkObjType,'Object-type',23,595)
   yacc.py: 471:Action : Reduce rule [colors -> TkRed] with ['red'] and goto state 133
   yacc.py: 506:Result : <str @ 0x10dd27810> ('red')
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor colors . LexToken(TkObjType,'Object-type',23,595)
   yacc.py: 471:Action : Reduce rule [newObjType -> TkObjType ids TkOf TkColor colors] with ['Object-type','heart','of','color','red'] and goto state 17
   yacc.py: 506:Result : <Node @ 0x10dd27780> (<Node.Node object at 0x10dd27780>)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst newObjType . LexToken(TkObjType,'Object-type',23,595)
   yacc.py: 471:Action : Reduce rule [worldInst -> newObjType] with [<Node @ 0x10dd27780>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10dd27748> (<Node.Node object at 0x10dd27748>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst . LexToken(TkObjType,'Object-type',23,595)
   yacc.py: 445:Action : Shift and goto state 27
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType . LexToken(TkId,'sky',23,607)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType TkId . LexToken(TkOf,'of',23,611)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['sky'] and goto state 44
   yacc.py: 506:Result : <str @ 0x1b0a5d7b0f0> ('sky')
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType TkId . LexToken(TkOf,'of',23,611)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['sky'] and goto state 44
   yacc.py: 506:Result : <str @ 0x10dd277d8> ('sky')
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType ids . LexToken(TkOf,'of',23,611)
   yacc.py: 445:Action : Shift and goto state 55
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf . LexToken(TkColor,'color',23,614)
   yacc.py: 445:Action : Shift and goto state 89
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor . LexToken(TkBlue,'blue',23,620)
   yacc.py: 445:Action : Shift and goto state 135
   yacc.py: 410:
   yacc.py: 411:State  : 135
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor TkBlue . LexToken(TkPlace,'Place',25,645)
   yacc.py: 469:Action : Reduce rule [colors -> TkBlue] with ['blue'] and goto state 133
   yacc.py: 506:Result : <str @ 0x1b0a5d7b1b0> ('blue')
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor colors . LexToken(TkPlace,'Place',25,645)
   yacc.py: 469:Action : Reduce rule [newObjType -> TkObjType ids TkOf TkColor colors] with ['Object-type','sky','of','color','blue'] and goto state 17
   yacc.py: 506:Result : <Node @ 0x1b0a5d79580> (<Node.Node object at 0x000001B0A5D79580>)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst newObjType . LexToken(TkPlace,'Place',25,645)
   yacc.py: 469:Action : Reduce rule [worldInst -> newObjType] with [<Node @ 0x1b0a5d79580>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a5d5dd90> (<Node.Node object at 0x000001B0A5D5DD90>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor TkBlue . LexToken(TkPlace,'Place',25,645)
   yacc.py: 471:Action : Reduce rule [colors -> TkBlue] with ['blue'] and goto state 133
   yacc.py: 506:Result : <str @ 0x10dd27880> ('blue')
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkObjType ids TkOf TkColor colors . LexToken(TkPlace,'Place',25,645)
   yacc.py: 471:Action : Reduce rule [newObjType -> TkObjType ids TkOf TkColor colors] with ['Object-type','sky','of','color','blue'] and goto state 17
   yacc.py: 506:Result : <Node @ 0x10dd27908> (<Node.Node object at 0x10dd27908>)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst newObjType . LexToken(TkPlace,'Place',25,645)
   yacc.py: 471:Action : Reduce rule [worldInst -> newObjType] with [<Node @ 0x10dd27908>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10dd278d0> (<Node.Node object at 0x10dd278d0>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst . LexToken(TkPlace,'Place',25,645)
   yacc.py: 445:Action : Shift and goto state 28
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace . LexToken(TkNum,3,25,651)
   yacc.py: 445:Action : Shift and goto state 45
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum . LexToken(TkOf,'of',25,653)
   yacc.py: 445:Action : Shift and goto state 56
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf . LexToken(TkId,'flower',25,656)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf TkId . LexToken(TkAt,'at',25,663)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['flower'] and goto state 90
   yacc.py: 506:Result : <str @ 0x1b0a5d7b330> ('flower')
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf TkId . LexToken(TkAt,'at',25,663)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['flower'] and goto state 90
   yacc.py: 506:Result : <str @ 0x10dd27b20> ('flower')
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf ids . LexToken(TkAt,'at',25,663)
   yacc.py: 445:Action : Shift and goto state 140
   yacc.py: 410:
   yacc.py: 411:State  : 140
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf ids TkAt . LexToken(TkNum,2,25,666)
   yacc.py: 445:Action : Shift and goto state 164
   yacc.py: 410:
   yacc.py: 411:State  : 164
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf ids TkAt TkNum . LexToken(TkNum,3,25,668)
   yacc.py: 445:Action : Shift and goto state 184
   yacc.py: 410:
   yacc.py: 411:State  : 184
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf ids TkAt TkNum TkNum . LexToken(TkPlace,'Place',26,670)
   yacc.py: 469:Action : Reduce rule [setPlaceObjWorld -> TkPlace TkNum TkOf ids TkAt TkNum TkNum] with ['Place',3,'of','flower','at',2,3] and goto state 18
   yacc.py: 506:Result : <Node @ 0x1b0a5d792e0> (<Node.Node object at 0x000001B0A5D792E0>)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst setPlaceObjWorld . LexToken(TkPlace,'Place',26,670)
   yacc.py: 469:Action : Reduce rule [worldInst -> setPlaceObjWorld] with [<Node @ 0x1b0a5d792e0>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a5d79490> (<Node.Node object at 0x000001B0A5D79490>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf ids TkAt TkNum TkNum . LexToken(TkPlace,'Place',26,670)
   yacc.py: 471:Action : Reduce rule [setPlaceObjWorld -> TkPlace TkNum TkOf ids TkAt TkNum TkNum] with ['Place',3,'of','flower','at',2,3] and goto state 18
   yacc.py: 506:Result : <Node @ 0x10dd27a20> (<Node.Node object at 0x10dd27a20>)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst setPlaceObjWorld . LexToken(TkPlace,'Place',26,670)
   yacc.py: 471:Action : Reduce rule [worldInst -> setPlaceObjWorld] with [<Node @ 0x10dd27a20>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10dd27a58> (<Node.Node object at 0x10dd27a58>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst . LexToken(TkPlace,'Place',26,670)
   yacc.py: 445:Action : Shift and goto state 28
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace . LexToken(TkNum,5,26,676)
   yacc.py: 445:Action : Shift and goto state 45
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum . LexToken(TkOf,'of',26,678)
   yacc.py: 445:Action : Shift and goto state 56
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf . LexToken(TkId,'heart',26,681)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf TkId . LexToken(TkAt,'at',26,687)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['heart'] and goto state 90
   yacc.py: 506:Result : <str @ 0x1b0a5d7b5b0> ('heart')
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf TkId . LexToken(TkAt,'at',26,687)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['heart'] and goto state 90
   yacc.py: 506:Result : <str @ 0x10dd27bc8> ('heart')
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf ids . LexToken(TkAt,'at',26,687)
   yacc.py: 445:Action : Shift and goto state 140
   yacc.py: 410:
   yacc.py: 411:State  : 140
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf ids TkAt . LexToken(TkNum,8,26,690)
   yacc.py: 445:Action : Shift and goto state 164
   yacc.py: 410:
   yacc.py: 411:State  : 164
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf ids TkAt TkNum . LexToken(TkNum,1,26,692)
   yacc.py: 445:Action : Shift and goto state 184
   yacc.py: 410:
   yacc.py: 411:State  : 184
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf ids TkAt TkNum TkNum . LexToken(TkPlace,'Place',27,694)
   yacc.py: 469:Action : Reduce rule [setPlaceObjWorld -> TkPlace TkNum TkOf ids TkAt TkNum TkNum] with ['Place',5,'of','heart','at',8,1] and goto state 18
   yacc.py: 506:Result : <Node @ 0x1b0a5d79640> (<Node.Node object at 0x000001B0A5D79640>)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst setPlaceObjWorld . LexToken(TkPlace,'Place',27,694)
   yacc.py: 469:Action : Reduce rule [worldInst -> setPlaceObjWorld] with [<Node @ 0x1b0a5d79640>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a5d797c0> (<Node.Node object at 0x000001B0A5D797C0>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf ids TkAt TkNum TkNum . LexToken(TkPlace,'Place',27,694)
   yacc.py: 471:Action : Reduce rule [setPlaceObjWorld -> TkPlace TkNum TkOf ids TkAt TkNum TkNum] with ['Place',5,'of','heart','at',8,1] and goto state 18
   yacc.py: 506:Result : <Node @ 0x10dd27d30> (<Node.Node object at 0x10dd27d30>)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst setPlaceObjWorld . LexToken(TkPlace,'Place',27,694)
   yacc.py: 471:Action : Reduce rule [worldInst -> setPlaceObjWorld] with [<Node @ 0x10dd27d30>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10dd27c18> (<Node.Node object at 0x10dd27c18>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst . LexToken(TkPlace,'Place',27,694)
   yacc.py: 445:Action : Shift and goto state 28
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace . LexToken(TkNum,1,27,700)
   yacc.py: 445:Action : Shift and goto state 45
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum . LexToken(TkOf,'of',27,702)
   yacc.py: 445:Action : Shift and goto state 56
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf . LexToken(TkId,'sky',27,705)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf TkId . LexToken(TkAt,'at',27,709)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['sky'] and goto state 90
   yacc.py: 506:Result : <str @ 0x1b0a5d7b770> ('sky')
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf TkId . LexToken(TkAt,'at',27,709)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['sky'] and goto state 90
   yacc.py: 506:Result : <str @ 0x10dd27d50> ('sky')
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf ids . LexToken(TkAt,'at',27,709)
   yacc.py: 445:Action : Shift and goto state 140
   yacc.py: 410:
   yacc.py: 411:State  : 140
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf ids TkAt . LexToken(TkNum,1,27,712)
   yacc.py: 445:Action : Shift and goto state 164
   yacc.py: 410:
   yacc.py: 411:State  : 164
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf ids TkAt TkNum . LexToken(TkNum,1,27,714)
   yacc.py: 445:Action : Shift and goto state 184
   yacc.py: 410:
   yacc.py: 411:State  : 184
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf ids TkAt TkNum TkNum . LexToken(TkPlace,'Place',28,716)
   yacc.py: 469:Action : Reduce rule [setPlaceObjWorld -> TkPlace TkNum TkOf ids TkAt TkNum TkNum] with ['Place',1,'of','sky','at',1,1] and goto state 18
   yacc.py: 506:Result : <Node @ 0x1b0a5d79130> (<Node.Node object at 0x000001B0A5D79130>)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst setPlaceObjWorld . LexToken(TkPlace,'Place',28,716)
   yacc.py: 469:Action : Reduce rule [worldInst -> setPlaceObjWorld] with [<Node @ 0x1b0a5d79130>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a5d79910> (<Node.Node object at 0x000001B0A5D79910>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf ids TkAt TkNum TkNum . LexToken(TkPlace,'Place',28,716)
   yacc.py: 471:Action : Reduce rule [setPlaceObjWorld -> TkPlace TkNum TkOf ids TkAt TkNum TkNum] with ['Place',1,'of','sky','at',1,1] and goto state 18
   yacc.py: 506:Result : <Node @ 0x10dd27eb8> (<Node.Node object at 0x10dd27eb8>)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst setPlaceObjWorld . LexToken(TkPlace,'Place',28,716)
   yacc.py: 471:Action : Reduce rule [worldInst -> setPlaceObjWorld] with [<Node @ 0x10dd27eb8>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10dd27c88> (<Node.Node object at 0x10dd27c88>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst . LexToken(TkPlace,'Place',28,716)
   yacc.py: 445:Action : Shift and goto state 28
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace . LexToken(TkNum,10,28,722)
   yacc.py: 445:Action : Shift and goto state 45
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum . LexToken(TkOf,'of',28,725)
   yacc.py: 445:Action : Shift and goto state 56
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf . LexToken(TkId,'table',28,728)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf TkId . LexToken(TkIn,'in',28,734)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['table'] and goto state 90
   yacc.py: 506:Result : <str @ 0x1b0a5d7b930> ('table')
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf TkId . LexToken(TkIn,'in',28,734)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['table'] and goto state 90
   yacc.py: 506:Result : <str @ 0x10dd27f10> ('table')
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf ids . LexToken(TkIn,'in',28,734)
   yacc.py: 445:Action : Shift and goto state 141
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf ids TkIn . LexToken(TkBasketLower,'basket',28,737)
   yacc.py: 445:Action : Shift and goto state 165
   yacc.py: 410:
   yacc.py: 411:State  : 165
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf ids TkIn TkBasketLower . LexToken(TkPlace,'Place',29,744)
   yacc.py: 469:Action : Reduce rule [setPlaceObjWorld -> TkPlace TkNum TkOf ids TkIn TkBasketLower] with ['Place',10,'of','table','in','basket'] and goto state 18
   yacc.py: 506:Result : <Node @ 0x1b0a5d79370> (<Node.Node object at 0x000001B0A5D79370>)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst setPlaceObjWorld . LexToken(TkPlace,'Place',29,744)
   yacc.py: 469:Action : Reduce rule [worldInst -> setPlaceObjWorld] with [<Node @ 0x1b0a5d79370>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a5d79a60> (<Node.Node object at 0x000001B0A5D79A60>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf ids TkIn TkBasketLower . LexToken(TkPlace,'Place',29,744)
   yacc.py: 471:Action : Reduce rule [setPlaceObjWorld -> TkPlace TkNum TkOf ids TkIn TkBasketLower] with ['Place',10,'of','table','in','basket'] and goto state 18
   yacc.py: 506:Result : <Node @ 0x10dd27fd0> (<Node.Node object at 0x10dd27fd0>)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst setPlaceObjWorld . LexToken(TkPlace,'Place',29,744)
   yacc.py: 471:Action : Reduce rule [worldInst -> setPlaceObjWorld] with [<Node @ 0x10dd27fd0>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10dd27f60> (<Node.Node object at 0x10dd27f60>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst . LexToken(TkPlace,'Place',29,744)
   yacc.py: 445:Action : Shift and goto state 28
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace . LexToken(TkNum,300,29,750)
   yacc.py: 445:Action : Shift and goto state 45
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum . LexToken(TkOf,'of',29,754)
   yacc.py: 445:Action : Shift and goto state 56
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf . LexToken(TkId,'mirror',29,757)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf TkId . LexToken(TkIn,'in',29,764)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['mirror'] and goto state 90
   yacc.py: 506:Result : <str @ 0x1b0a5d7bab0> ('mirror')
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf TkId . LexToken(TkIn,'in',29,764)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['mirror'] and goto state 90
   yacc.py: 506:Result : <str @ 0x10dd2a110> ('mirror')
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf ids . LexToken(TkIn,'in',29,764)
   yacc.py: 445:Action : Shift and goto state 141
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf ids TkIn . LexToken(TkBasketLower,'basket',29,767)
   yacc.py: 445:Action : Shift and goto state 165
   yacc.py: 410:
   yacc.py: 411:State  : 165
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf ids TkIn TkBasketLower . LexToken(TkStart,'Start',31,794)
   yacc.py: 469:Action : Reduce rule [setPlaceObjWorld -> TkPlace TkNum TkOf ids TkIn TkBasketLower] with ['Place',300,'of','mirror','in','basket'] and goto state 18
   yacc.py: 506:Result : <Node @ 0x1b0a5d793a0> (<Node.Node object at 0x000001B0A5D793A0>)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst setPlaceObjWorld . LexToken(TkStart,'Start',31,794)
   yacc.py: 469:Action : Reduce rule [worldInst -> setPlaceObjWorld] with [<Node @ 0x1b0a5d793a0>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a5d79b50> (<Node.Node object at 0x000001B0A5D79B50>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkPlace TkNum TkOf ids TkIn TkBasketLower . LexToken(TkStart,'Start',31,794)
   yacc.py: 471:Action : Reduce rule [setPlaceObjWorld -> TkPlace TkNum TkOf ids TkIn TkBasketLower] with ['Place',300,'of','mirror','in','basket'] and goto state 18
   yacc.py: 506:Result : <Node @ 0x10dd2a160> (<Node.Node object at 0x10dd2a160>)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst setPlaceObjWorld . LexToken(TkStart,'Start',31,794)
   yacc.py: 471:Action : Reduce rule [worldInst -> setPlaceObjWorld] with [<Node @ 0x10dd2a160>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10dd27e80> (<Node.Node object at 0x10dd27e80>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst . LexToken(TkStart,'Start',31,794)
   yacc.py: 445:Action : Shift and goto state 29
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkStart . LexToken(TkAt,'at',31,800)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkStart TkAt . LexToken(TkNum,8,31,803)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkStart TkAt TkNum . LexToken(TkNum,4,31,805)
   yacc.py: 445:Action : Shift and goto state 91
   yacc.py: 410:
   yacc.py: 411:State  : 91
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkStart TkAt TkNum TkNum . LexToken(TkHeading,'heading',31,807)
   yacc.py: 445:Action : Shift and goto state 142
   yacc.py: 410:
   yacc.py: 411:State  : 142
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkStart TkAt TkNum TkNum TkHeading . LexToken(TkEast,'east',31,815)
   yacc.py: 445:Action : Shift and goto state 41
   yacc.py: 410:
   yacc.py: 411:State  : 41
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkStart TkAt TkNum TkNum TkHeading TkEast . LexToken(TkBasket,'Basket',32,820)
   yacc.py: 469:Action : Reduce rule [directions -> TkEast] with ['east'] and goto state 166
   yacc.py: 506:Result : <Node @ 0x1b0a5d79250> (<Node.Node object at 0x000001B0A5D79250>)
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkStart TkAt TkNum TkNum TkHeading directions . LexToken(TkBasket,'Basket',32,820)
   yacc.py: 469:Action : Reduce rule [setStartPosition -> TkStart TkAt TkNum TkNum TkHeading directions] with ['Start','at',8,4,'heading',<Node @ 0x1b0a5d79250>] and goto state 19
   yacc.py: 506:Result : <Node @ 0x1b0a5d79c40> (<Node.Node object at 0x000001B0A5D79C40>)
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst setStartPosition . LexToken(TkBasket,'Basket',32,820)
   yacc.py: 469:Action : Reduce rule [worldInst -> setStartPosition] with [<Node @ 0x1b0a5d79c40>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a5d79c10> (<Node.Node object at 0x000001B0A5D79C10>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkStart TkAt TkNum TkNum TkHeading TkEast . LexToken(TkBasket,'Basket',32,820)
   yacc.py: 471:Action : Reduce rule [directions -> TkEast] with ['east'] and goto state 166
   yacc.py: 506:Result : <Node @ 0x10dd277b8> (<Node.Node object at 0x10dd277b8>)
   yacc.py: 410:
   yacc.py: 411:State  : 166
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkStart TkAt TkNum TkNum TkHeading directions . LexToken(TkBasket,'Basket',32,820)
   yacc.py: 471:Action : Reduce rule [setStartPosition -> TkStart TkAt TkNum TkNum TkHeading directions] with ['Start','at',8,4,'heading',<Node @ 0x10dd277b8>] and goto state 19
   yacc.py: 506:Result : <Node @ 0x10dd2a438> (<Node.Node object at 0x10dd2a438>)
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst setStartPosition . LexToken(TkBasket,'Basket',32,820)
   yacc.py: 471:Action : Reduce rule [worldInst -> setStartPosition] with [<Node @ 0x10dd2a438>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10dd27e48> (<Node.Node object at 0x10dd27e48>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst . LexToken(TkBasket,'Basket',32,820)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkBasket . LexToken(TkOf,'of',32,827)
   yacc.py: 445:Action : Shift and goto state 47
   yacc.py: 410:
   yacc.py: 411:State  : 47
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkBasket TkOf . LexToken(TkCapacity,'capacity',32,830)
   yacc.py: 445:Action : Shift and goto state 58
   yacc.py: 410:
   yacc.py: 411:State  : 58
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkBasket TkOf TkCapacity . LexToken(TkNum,310,32,839)
   yacc.py: 445:Action : Shift and goto state 92
   yacc.py: 410:
   yacc.py: 411:State  : 92
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkBasket TkOf TkCapacity TkNum . LexToken(TkBoolean,'Boolean',33,843)
   yacc.py: 469:Action : Reduce rule [setBasketCapacity -> TkBasket TkOf TkCapacity TkNum] with ['Basket','of','capacity',310] and goto state 20
   yacc.py: 506:Result : <Node @ 0x1b0a5d79e20> (<Node.Node object at 0x000001B0A5D79E20>)
   yacc.py: 410:
   yacc.py: 411:State  : 20
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst setBasketCapacity . LexToken(TkBoolean,'Boolean',33,843)
   yacc.py: 469:Action : Reduce rule [worldInst -> setBasketCapacity] with [<Node @ 0x1b0a5d79e20>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a5d79f10> (<Node.Node object at 0x000001B0A5D79F10>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkBasket TkOf TkCapacity TkNum . LexToken(TkBoolean,'Boolean',33,843)
   yacc.py: 471:Action : Reduce rule [setBasketCapacity -> TkBasket TkOf TkCapacity TkNum] with ['Basket','of','capacity',310] and goto state 20
   yacc.py: 506:Result : <Node @ 0x10dd2a4e0> (<Node.Node object at 0x10dd2a4e0>)
   yacc.py: 410:
   yacc.py: 411:State  : 20
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst setBasketCapacity . LexToken(TkBoolean,'Boolean',33,843)
   yacc.py: 471:Action : Reduce rule [worldInst -> setBasketCapacity] with [<Node @ 0x10dd2a4e0>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10dd2a470> (<Node.Node object at 0x10dd2a470>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst . LexToken(TkBoolean,'Boolean',33,843)
   yacc.py: 445:Action : Shift and goto state 31
   yacc.py: 410:
   yacc.py: 411:State  : 31
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkBoolean . LexToken(TkId,'willyhappy',33,851)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkBoolean TkId . LexToken(TkWith,'with',33,862)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['willyhappy'] and goto state 48
   yacc.py: 506:Result : <str @ 0x1b0a5d7bfb0> ('willyhappy')
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkBoolean TkId . LexToken(TkWith,'with',33,862)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['willyhappy'] and goto state 48
   yacc.py: 506:Result : <str @ 0x10dd0a9b0> ('willyhappy')
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkBoolean ids . LexToken(TkWith,'with',33,862)
   yacc.py: 445:Action : Shift and goto state 59
   yacc.py: 410:
   yacc.py: 411:State  : 59
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkBoolean ids TkWith . LexToken(TkInitial,'initial',33,867)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkBoolean ids TkWith TkInitial . LexToken(TkValue,'value',33,875)
   yacc.py: 445:Action : Shift and goto state 143
   yacc.py: 410:
   yacc.py: 411:State  : 143
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkBoolean ids TkWith TkInitial TkValue . LexToken(TkTrue,'true',33,881)
   yacc.py: 445:Action : Shift and goto state 167
   yacc.py: 410:
   yacc.py: 411:State  : 167
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkBoolean ids TkWith TkInitial TkValue TkTrue . LexToken(TkBoolean,'Boolean',34,886)
   yacc.py: 469:Action : Reduce rule [newBoolean -> TkBoolean ids TkWith TkInitial TkValue TkTrue] with ['Boolean','willyhappy','with','initial','value','true'] and goto state 21
   yacc.py: 506:Result : <Node @ 0x1b0a5d79760> (<Node.Node object at 0x000001B0A5D79760>)
   yacc.py: 410:
   yacc.py: 411:State  : 21
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst newBoolean . LexToken(TkBoolean,'Boolean',34,886)
   yacc.py: 469:Action : Reduce rule [worldInst -> newBoolean] with [<Node @ 0x1b0a5d79760>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a5d79dc0> (<Node.Node object at 0x000001B0A5D79DC0>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkBoolean ids TkWith TkInitial TkValue TkTrue . LexToken(TkBoolean,'Boolean',34,886)
   yacc.py: 471:Action : Reduce rule [newBoolean -> TkBoolean ids TkWith TkInitial TkValue TkTrue] with ['Boolean','willyhappy','with','initial','value','true'] and goto state 21
   yacc.py: 506:Result : <Node @ 0x10dd2a198> (<Node.Node object at 0x10dd2a198>)
   yacc.py: 410:
   yacc.py: 411:State  : 21
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst newBoolean . LexToken(TkBoolean,'Boolean',34,886)
   yacc.py: 471:Action : Reduce rule [worldInst -> newBoolean] with [<Node @ 0x10dd2a198>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10dd2a748> (<Node.Node object at 0x10dd2a748>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst . LexToken(TkBoolean,'Boolean',34,886)
   yacc.py: 445:Action : Shift and goto state 31
   yacc.py: 410:
   yacc.py: 411:State  : 31
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkBoolean . LexToken(TkId,'willycanlearn',34,894)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkBoolean TkId . LexToken(TkWith,'with',34,908)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['willycanlearn'] and goto state 48
   yacc.py: 506:Result : <str @ 0x1b0a5d7d470> ('willycanlearn')
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkBoolean TkId . LexToken(TkWith,'with',34,908)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['willycanlearn'] and goto state 48
   yacc.py: 506:Result : <str @ 0x10dd0a7f0> ('willycanlearn')
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkBoolean ids . LexToken(TkWith,'with',34,908)
   yacc.py: 445:Action : Shift and goto state 59
   yacc.py: 410:
   yacc.py: 411:State  : 59
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkBoolean ids TkWith . LexToken(TkInitial,'initial',34,913)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkBoolean ids TkWith TkInitial . LexToken(TkValue,'value',34,921)
   yacc.py: 445:Action : Shift and goto state 143
   yacc.py: 410:
   yacc.py: 411:State  : 143
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkBoolean ids TkWith TkInitial TkValue . LexToken(TkFalse,'false',34,927)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkBoolean ids TkWith TkInitial TkValue TkFalse . LexToken(TkGoal,'Goal',35,933)
   yacc.py: 469:Action : Reduce rule [newBoolean -> TkBoolean ids TkWith TkInitial TkValue TkFalse] with ['Boolean','willycanlearn','with','initial','value','false'] and goto state 21
   yacc.py: 506:Result : <Node @ 0x1b0a5d798b0> (<Node.Node object at 0x000001B0A5D798B0>)
   yacc.py: 410:
   yacc.py: 411:State  : 21
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst newBoolean . LexToken(TkGoal,'Goal',35,933)
   yacc.py: 469:Action : Reduce rule [worldInst -> newBoolean] with [<Node @ 0x1b0a5d798b0>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a5d79d60> (<Node.Node object at 0x000001B0A5D79D60>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkBoolean ids TkWith TkInitial TkValue TkFalse . LexToken(TkGoal,'Goal',35,933)
   yacc.py: 471:Action : Reduce rule [newBoolean -> TkBoolean ids TkWith TkInitial TkValue TkFalse] with ['Boolean','willycanlearn','with','initial','value','false'] and goto state 21
   yacc.py: 506:Result : <Node @ 0x10dd2a2b0> (<Node.Node object at 0x10dd2a2b0>)
   yacc.py: 410:
   yacc.py: 411:State  : 21
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst newBoolean . LexToken(TkGoal,'Goal',35,933)
   yacc.py: 471:Action : Reduce rule [worldInst -> newBoolean] with [<Node @ 0x10dd2a2b0>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10dd2a908> (<Node.Node object at 0x10dd2a908>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst . LexToken(TkGoal,'Goal',35,933)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal . LexToken(TkId,'goal1',35,938)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal TkId . LexToken(TkIs,'is',35,944)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['goal1'] and goto state 49
   yacc.py: 506:Result : <str @ 0x1b0a5d7da30> ('goal1')
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal TkId . LexToken(TkIs,'is',35,944)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['goal1'] and goto state 49
   yacc.py: 506:Result : <str @ 0x10dd2a650> ('goal1')
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 49
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal ids . LexToken(TkIs,'is',35,944)
   yacc.py: 445:Action : Shift and goto state 60
   yacc.py: 410:
   yacc.py: 411:State  : 60
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal ids TkIs . LexToken(TkWilly,'willy',35,947)
   yacc.py: 445:Action : Shift and goto state 94
   yacc.py: 410:
   yacc.py: 411:State  : 94
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal ids TkIs TkWilly . LexToken(TkIs,'is',35,953)
   yacc.py: 445:Action : Shift and goto state 144
   yacc.py: 410:
   yacc.py: 411:State  : 144
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal ids TkIs TkWilly TkIs . LexToken(TkAt,'at',35,956)
   yacc.py: 445:Action : Shift and goto state 169
   yacc.py: 410:
   yacc.py: 411:State  : 169
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal ids TkIs TkWilly TkIs TkAt . LexToken(TkNum,8,35,959)
   yacc.py: 445:Action : Shift and goto state 185
   yacc.py: 410:
   yacc.py: 411:State  : 185
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal ids TkIs TkWilly TkIs TkAt TkNum . LexToken(TkNum,1,35,961)
   yacc.py: 445:Action : Shift and goto state 192
   yacc.py: 410:
   yacc.py: 411:State  : 192
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal ids TkIs TkWilly TkIs TkAt TkNum TkNum . LexToken(TkGoal,'Goal',36,963)
   yacc.py: 469:Action : Reduce rule [newGoal -> TkGoal ids TkIs TkWilly TkIs TkAt TkNum TkNum] with ['Goal','goal1','is','willy','is','at',8,1] and goto state 22
   yacc.py: 506:Result : <Node @ 0x1b0a5d79a30> (<Node.Node object at 0x000001B0A5D79A30>)
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst newGoal . LexToken(TkGoal,'Goal',36,963)
   yacc.py: 469:Action : Reduce rule [worldInst -> newGoal] with [<Node @ 0x1b0a5d79a30>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a5d79700> (<Node.Node object at 0x000001B0A5D79700>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal ids TkIs TkWilly TkIs TkAt TkNum TkNum . LexToken(TkGoal,'Goal',36,963)
   yacc.py: 471:Action : Reduce rule [newGoal -> TkGoal ids TkIs TkWilly TkIs TkAt TkNum TkNum] with ['Goal','goal1','is','willy','is','at',8,1] and goto state 22
   yacc.py: 506:Result : <Node @ 0x10dd2a4a8> (<Node.Node object at 0x10dd2a4a8>)
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst newGoal . LexToken(TkGoal,'Goal',36,963)
   yacc.py: 471:Action : Reduce rule [worldInst -> newGoal] with [<Node @ 0x10dd2a4a8>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10dd2a940> (<Node.Node object at 0x10dd2a940>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst . LexToken(TkGoal,'Goal',36,963)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal . LexToken(TkId,'goal2',36,968)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal TkId . LexToken(TkIs,'is',36,974)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['goal2'] and goto state 49
   yacc.py: 506:Result : <str @ 0x1b0a5d7de30> ('goal2')
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal TkId . LexToken(TkIs,'is',36,974)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['goal2'] and goto state 49
   yacc.py: 506:Result : <str @ 0x10dd2a880> ('goal2')
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 49
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal ids . LexToken(TkIs,'is',36,974)
   yacc.py: 445:Action : Shift and goto state 60
   yacc.py: 410:
   yacc.py: 411:State  : 60
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal ids TkIs . LexToken(TkNum,300,36,977)
   yacc.py: 445:Action : Shift and goto state 95
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal ids TkIs TkNum . LexToken(TkId,'mirror',36,981)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal ids TkIs TkNum TkId . LexToken(TkObjectsLower,'objects',36,988)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['mirror'] and goto state 145
   yacc.py: 506:Result : <str @ 0x1b0a5d7de70> ('mirror')
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal ids TkIs TkNum TkId . LexToken(TkObjectsLower,'objects',36,988)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['mirror'] and goto state 145
   yacc.py: 506:Result : <str @ 0x10dd2aae8> ('mirror')
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 145
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal ids TkIs TkNum ids . LexToken(TkObjectsLower,'objects',36,988)
   yacc.py: 445:Action : Shift and goto state 170
   yacc.py: 410:
   yacc.py: 411:State  : 170
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal ids TkIs TkNum ids TkObjectsLower . LexToken(TkIn,'in',36,996)
   yacc.py: 445:Action : Shift and goto state 186
   yacc.py: 410:
   yacc.py: 411:State  : 186
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal ids TkIs TkNum ids TkObjectsLower TkIn . LexToken(TkBasket,'Basket',36,999)
   yacc.py: 445:Action : Shift and goto state 193
   yacc.py: 410:
   yacc.py: 411:State  : 193
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal ids TkIs TkNum ids TkObjectsLower TkIn TkBasket . LexToken(TkGoal,'Goal',37,1006)
   yacc.py: 469:Action : Reduce rule [newGoal -> TkGoal ids TkIs TkNum ids TkObjectsLower TkIn TkBasket] with ['Goal','goal2','is',300,'mirror','objects','in','Basket'] and goto state 22
   yacc.py: 506:Result : <Node @ 0x1b0a5d7c1c0> (<Node.Node object at 0x000001B0A5D7C1C0>)
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst newGoal . LexToken(TkGoal,'Goal',37,1006)
   yacc.py: 469:Action : Reduce rule [worldInst -> newGoal] with [<Node @ 0x1b0a5d7c1c0>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a5d7c490> (<Node.Node object at 0x000001B0A5D7C490>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal ids TkIs TkNum ids TkObjectsLower TkIn TkBasket . LexToken(TkGoal,'Goal',37,1006)
   yacc.py: 471:Action : Reduce rule [newGoal -> TkGoal ids TkIs TkNum ids TkObjectsLower TkIn TkBasket] with ['Goal','goal2','is',300,'mirror','objects','in','Basket'] and goto state 22
   yacc.py: 506:Result : <Node @ 0x10dd2ac50> (<Node.Node object at 0x10dd2ac50>)
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst newGoal . LexToken(TkGoal,'Goal',37,1006)
   yacc.py: 471:Action : Reduce rule [worldInst -> newGoal] with [<Node @ 0x10dd2ac50>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10dd2aba8> (<Node.Node object at 0x10dd2aba8>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst . LexToken(TkGoal,'Goal',37,1006)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal . LexToken(TkId,'goal3',37,1011)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal TkId . LexToken(TkIs,'is',37,1017)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['goal3'] and goto state 49
   yacc.py: 506:Result : <str @ 0x1b0a5d7f1f0> ('goal3')
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal TkId . LexToken(TkIs,'is',37,1017)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['goal3'] and goto state 49
   yacc.py: 506:Result : <str @ 0x10dd2ab20> ('goal3')
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 49
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal ids . LexToken(TkIs,'is',37,1017)
   yacc.py: 445:Action : Shift and goto state 60
   yacc.py: 410:
   yacc.py: 411:State  : 60
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal ids TkIs . LexToken(TkNum,10,37,1020)
   yacc.py: 445:Action : Shift and goto state 95
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal ids TkIs TkNum . LexToken(TkId,'table',37,1023)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal ids TkIs TkNum TkId . LexToken(TkObjectsLower,'objects',37,1029)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['table'] and goto state 145
   yacc.py: 506:Result : <str @ 0x1b0a5d7f270> ('table')
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal ids TkIs TkNum TkId . LexToken(TkObjectsLower,'objects',37,1029)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['table'] and goto state 145
   yacc.py: 506:Result : <str @ 0x10dd2ad50> ('table')
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 145
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal ids TkIs TkNum ids . LexToken(TkObjectsLower,'objects',37,1029)
   yacc.py: 445:Action : Shift and goto state 170
   yacc.py: 410:
   yacc.py: 411:State  : 170
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal ids TkIs TkNum ids TkObjectsLower . LexToken(TkAt,'at',37,1037)
   yacc.py: 445:Action : Shift and goto state 187
   yacc.py: 410:
   yacc.py: 411:State  : 187
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal ids TkIs TkNum ids TkObjectsLower TkAt . LexToken(TkNum,5,37,1040)
   yacc.py: 445:Action : Shift and goto state 194
   yacc.py: 410:
   yacc.py: 411:State  : 194
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal ids TkIs TkNum ids TkObjectsLower TkAt TkNum . LexToken(TkNum,4,37,1042)
   yacc.py: 445:Action : Shift and goto state 196
   yacc.py: 410:
   yacc.py: 411:State  : 196
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal ids TkIs TkNum ids TkObjectsLower TkAt TkNum TkNum . LexToken(TkFinalG,'Final goal',38,1044)
   yacc.py: 469:Action : Reduce rule [newGoal -> TkGoal ids TkIs TkNum ids TkObjectsLower TkAt TkNum TkNum] with ['Goal','goal3','is',10,'table','objects','at',5,4] and goto state 22
   yacc.py: 506:Result : <Node @ 0x1b0a5d7c370> (<Node.Node object at 0x000001B0A5D7C370>)
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst newGoal . LexToken(TkFinalG,'Final goal',38,1044)
   yacc.py: 469:Action : Reduce rule [worldInst -> newGoal] with [<Node @ 0x1b0a5d7c370>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a5d7c5e0> (<Node.Node object at 0x000001B0A5D7C5E0>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkGoal ids TkIs TkNum ids TkObjectsLower TkAt TkNum TkNum . LexToken(TkFinalG,'Final goal',38,1044)
   yacc.py: 471:Action : Reduce rule [newGoal -> TkGoal ids TkIs TkNum ids TkObjectsLower TkAt TkNum TkNum] with ['Goal','goal3','is',10,'table','objects','at',5,4] and goto state 22
   yacc.py: 506:Result : <Node @ 0x10dd2af28> (<Node.Node object at 0x10dd2af28>)
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst newGoal . LexToken(TkFinalG,'Final goal',38,1044)
   yacc.py: 471:Action : Reduce rule [worldInst -> newGoal] with [<Node @ 0x10dd2af28>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10dd2add8> (<Node.Node object at 0x10dd2add8>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst . LexToken(TkFinalG,'Final goal',38,1044)
   yacc.py: 445:Action : Shift and goto state 33
   yacc.py: 410:
   yacc.py: 411:State  : 33
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG . LexToken(TkIs,'is',38,1055)
   yacc.py: 445:Action : Shift and goto state 50
   yacc.py: 410:
   yacc.py: 411:State  : 50
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs . LexToken(TkId,'goal1',38,1058)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs TkId . LexToken(TkOr,'or',38,1064)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['goal1'] and goto state 62
   yacc.py: 506:Result : <str @ 0x1b0a5d7f630> ('goal1')
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs ids . LexToken(TkOr,'or',38,1064)
   yacc.py: 469:Action : Reduce rule [finalGoalTest -> ids] with ['goal1'] and goto state 61
   yacc.py: 506:Result : <Node @ 0x1b0a5d7c5b0> (<Node.Node object at 0x000001B0A5D7C5B0>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs TkId . LexToken(TkOr,'or',38,1064)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['goal1'] and goto state 62
   yacc.py: 506:Result : <str @ 0x10dd2a848> ('goal1')
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs ids . LexToken(TkOr,'or',38,1064)
   yacc.py: 471:Action : Reduce rule [finalGoalTest -> ids] with ['goal1'] and goto state 61
   yacc.py: 506:Result : <Node @ 0x10dd2ae48> (<Node.Node object at 0x10dd2ae48>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest . LexToken(TkOr,'or',38,1064)
   yacc.py: 445:Action : Shift and goto state 96
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkOr . LexToken(TkId,'goal2',38,1067)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkOr TkId . LexToken(TkAnd,'and',38,1073)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['goal2'] and goto state 62
   yacc.py: 506:Result : <str @ 0x1b0a5d7f6f0> ('goal2')
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkOr ids . LexToken(TkAnd,'and',38,1073)
   yacc.py: 469:Action : Reduce rule [finalGoalTest -> ids] with ['goal2'] and goto state 146
   yacc.py: 506:Result : <Node @ 0x1b0a5d7c0a0> (<Node.Node object at 0x000001B0A5D7C0A0>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkOr TkId . LexToken(TkAnd,'and',38,1073)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['goal2'] and goto state 62
   yacc.py: 506:Result : <str @ 0x10dd2d068> ('goal2')
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkOr ids . LexToken(TkAnd,'and',38,1073)
   yacc.py: 471:Action : Reduce rule [finalGoalTest -> ids] with ['goal2'] and goto state 146
   yacc.py: 506:Result : <Node @ 0x10dd2d0f0> (<Node.Node object at 0x10dd2d0f0>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkOr finalGoalTest . LexToken(TkAnd,'and',38,1073)
   yacc.py: 445:Action : Shift and goto state 97
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkOr finalGoalTest TkAnd . LexToken(TkId,'goal3',38,1077)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkOr finalGoalTest TkAnd TkId . LexToken(TkFinalG,'Final goal',39,1083)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['goal3'] and goto state 62
   yacc.py: 506:Result : <str @ 0x1b0a5d7f7f0> ('goal3')
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkOr finalGoalTest TkAnd ids . LexToken(TkFinalG,'Final goal',39,1083)
   yacc.py: 469:Action : Reduce rule [finalGoalTest -> ids] with ['goal3'] and goto state 147
   yacc.py: 506:Result : <Node @ 0x1b0a5d7c850> (<Node.Node object at 0x000001B0A5D7C850>)
   yacc.py: 410:
   yacc.py: 411:State  : 147
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkOr finalGoalTest TkAnd finalGoalTest . LexToken(TkFinalG,'Final goal',39,1083)
   yacc.py: 469:Action : Reduce rule [conjuncionGoal -> finalGoalTest TkAnd finalGoalTest] with [<Node @ 0x1b0a5d7c0a0>,'and',<Node @ 0x1b0a5d7c850>] and goto state 64
   yacc.py: 506:Result : <Node @ 0x1b0a5d7c730> (<Node.Node object at 0x000001B0A5D7C730>)
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkOr conjuncionGoal . LexToken(TkFinalG,'Final goal',39,1083)
   yacc.py: 469:Action : Reduce rule [finalGoalTest -> conjuncionGoal] with [<Node @ 0x1b0a5d7c730>] and goto state 146
   yacc.py: 506:Result : <Node @ 0x1b0a5d7c280> (<Node.Node object at 0x000001B0A5D7C280>)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkOr finalGoalTest . LexToken(TkFinalG,'Final goal',39,1083)
   yacc.py: 469:Action : Reduce rule [disyuncionGoal -> finalGoalTest TkOr finalGoalTest] with [<Node @ 0x1b0a5d7c5b0>,'or',<Node @ 0x1b0a5d7c280>] and goto state 63
   yacc.py: 506:Result : <Node @ 0x1b0a5d7c8e0> (<Node.Node object at 0x000001B0A5D7C8E0>)
   yacc.py: 410:
   yacc.py: 411:State  : 63
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs disyuncionGoal . LexToken(TkFinalG,'Final goal',39,1083)
   yacc.py: 469:Action : Reduce rule [finalGoalTest -> disyuncionGoal] with [<Node @ 0x1b0a5d7c8e0>] and goto state 61
   yacc.py: 506:Result : <Node @ 0x1b0a5d7c100> (<Node.Node object at 0x000001B0A5D7C100>)
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest . LexToken(TkFinalG,'Final goal',39,1083)
   yacc.py: 469:Action : Reduce rule [finalGoal -> TkFinalG TkIs finalGoalTest] with ['Final goal','is',<Node @ 0x1b0a5d7c100>] and goto state 23
   yacc.py: 506:Result : <Node @ 0x1b0a5d7c580> (<Node.Node object at 0x000001B0A5D7C580>)
   yacc.py: 410:
   yacc.py: 411:State  : 23
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst finalGoal . LexToken(TkFinalG,'Final goal',39,1083)
   yacc.py: 469:Action : Reduce rule [worldInst -> finalGoal] with [<Node @ 0x1b0a5d7c580>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a5d7c790> (<Node.Node object at 0x000001B0A5D7C790>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkOr finalGoalTest TkAnd TkId . LexToken(TkFinalG,'Final goal',39,1083)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['goal3'] and goto state 62
   yacc.py: 506:Result : <str @ 0x10dd2d110> ('goal3')
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkOr finalGoalTest TkAnd ids . LexToken(TkFinalG,'Final goal',39,1083)
   yacc.py: 471:Action : Reduce rule [finalGoalTest -> ids] with ['goal3'] and goto state 147
   yacc.py: 506:Result : <Node @ 0x10dd2d1d0> (<Node.Node object at 0x10dd2d1d0>)
   yacc.py: 410:
   yacc.py: 411:State  : 147
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkOr finalGoalTest TkAnd finalGoalTest . LexToken(TkFinalG,'Final goal',39,1083)
   yacc.py: 471:Action : Reduce rule [conjuncionGoal -> finalGoalTest TkAnd finalGoalTest] with [<Node @ 0x10dd2d0f0>,'and',<Node @ 0x10dd2d1d0>] and goto state 64
   yacc.py: 506:Result : <Node @ 0x10dd2d198> (<Node.Node object at 0x10dd2d198>)
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkOr conjuncionGoal . LexToken(TkFinalG,'Final goal',39,1083)
   yacc.py: 471:Action : Reduce rule [finalGoalTest -> conjuncionGoal] with [<Node @ 0x10dd2d198>] and goto state 146
   yacc.py: 506:Result : <Node @ 0x10dd2a780> (<Node.Node object at 0x10dd2a780>)
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkOr finalGoalTest . LexToken(TkFinalG,'Final goal',39,1083)
   yacc.py: 471:Action : Reduce rule [disyuncionGoal -> finalGoalTest TkOr finalGoalTest] with [<Node @ 0x10dd2ae48>,'or',<Node @ 0x10dd2a780>] and goto state 63
   yacc.py: 506:Result : <Node @ 0x10dd2d2e8> (<Node.Node object at 0x10dd2d2e8>)
   yacc.py: 410:
   yacc.py: 411:State  : 63
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs disyuncionGoal . LexToken(TkFinalG,'Final goal',39,1083)
   yacc.py: 471:Action : Reduce rule [finalGoalTest -> disyuncionGoal] with [<Node @ 0x10dd2d2e8>] and goto state 61
   yacc.py: 506:Result : <Node @ 0x10dd2aac8> (<Node.Node object at 0x10dd2aac8>)
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest . LexToken(TkFinalG,'Final goal',39,1083)
   yacc.py: 471:Action : Reduce rule [finalGoal -> TkFinalG TkIs finalGoalTest] with ['Final goal','is',<Node @ 0x10dd2aac8>] and goto state 23
   yacc.py: 506:Result : <Node @ 0x10dd2af60> (<Node.Node object at 0x10dd2af60>)
   yacc.py: 410:
   yacc.py: 411:State  : 23
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst finalGoal . LexToken(TkFinalG,'Final goal',39,1083)
   yacc.py: 471:Action : Reduce rule [worldInst -> finalGoal] with [<Node @ 0x10dd2af60>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10dd2afd0> (<Node.Node object at 0x10dd2afd0>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst . LexToken(TkFinalG,'Final goal',39,1083)
   yacc.py: 445:Action : Shift and goto state 33
   yacc.py: 410:
   yacc.py: 411:State  : 33
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG . LexToken(TkIs,'is',39,1094)
   yacc.py: 445:Action : Shift and goto state 50
   yacc.py: 410:
   yacc.py: 411:State  : 50
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs . LexToken(TkNot,'not',39,1097)
   yacc.py: 445:Action : Shift and goto state 67
   yacc.py: 410:
   yacc.py: 411:State  : 67
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs TkNot . LexToken(TkId,'goal2',39,1101)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs TkNot TkId . LexToken(TkAnd,'and',39,1107)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['goal2'] and goto state 62
   yacc.py: 506:Result : <str @ 0x1b0a5d7fbf0> ('goal2')
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs TkNot ids . LexToken(TkAnd,'and',39,1107)
   yacc.py: 469:Action : Reduce rule [finalGoalTest -> ids] with ['goal2'] and goto state 99
   yacc.py: 506:Result : <Node @ 0x1b0a5d7ca30> (<Node.Node object at 0x000001B0A5D7CA30>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs TkNot TkId . LexToken(TkAnd,'and',39,1107)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['goal2'] and goto state 62
   yacc.py: 506:Result : <str @ 0x10dd2d260> ('goal2')
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs TkNot ids . LexToken(TkAnd,'and',39,1107)
   yacc.py: 471:Action : Reduce rule [finalGoalTest -> ids] with ['goal2'] and goto state 99
   yacc.py: 506:Result : <Node @ 0x10dd2d3c8> (<Node.Node object at 0x10dd2d3c8>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 99
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs TkNot finalGoalTest . LexToken(TkAnd,'and',39,1107)
   yacc.py: 445:Action : Shift and goto state 97
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs TkNot finalGoalTest TkAnd . LexToken(TkId,'goal3',39,1111)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs TkNot finalGoalTest TkAnd TkId . LexToken(TkFinalG,'Final goal',40,1117)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['goal3'] and goto state 62
   yacc.py: 506:Result : <str @ 0x1b0a5d7fd70> ('goal3')
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs TkNot finalGoalTest TkAnd ids . LexToken(TkFinalG,'Final goal',40,1117)
   yacc.py: 469:Action : Reduce rule [finalGoalTest -> ids] with ['goal3'] and goto state 147
   yacc.py: 506:Result : <Node @ 0x1b0a5d7cb50> (<Node.Node object at 0x000001B0A5D7CB50>)
   yacc.py: 410:
   yacc.py: 411:State  : 147
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs TkNot finalGoalTest TkAnd finalGoalTest . LexToken(TkFinalG,'Final goal',40,1117)
   yacc.py: 469:Action : Reduce rule [conjuncionGoal -> finalGoalTest TkAnd finalGoalTest] with [<Node @ 0x1b0a5d7ca30>,'and',<Node @ 0x1b0a5d7cb50>] and goto state 64
   yacc.py: 506:Result : <Node @ 0x1b0a5d7cac0> (<Node.Node object at 0x000001B0A5D7CAC0>)
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs TkNot conjuncionGoal . LexToken(TkFinalG,'Final goal',40,1117)
   yacc.py: 469:Action : Reduce rule [finalGoalTest -> conjuncionGoal] with [<Node @ 0x1b0a5d7cac0>] and goto state 99
   yacc.py: 506:Result : <Node @ 0x1b0a5d7c3a0> (<Node.Node object at 0x000001B0A5D7C3A0>)
   yacc.py: 410:
   yacc.py: 411:State  : 99
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs TkNot finalGoalTest . LexToken(TkFinalG,'Final goal',40,1117)
   yacc.py: 469:Action : Reduce rule [negacionGoal -> TkNot finalGoalTest] with ['not',<Node @ 0x1b0a5d7c3a0>] and goto state 65
   yacc.py: 506:Result : <Node @ 0x1b0a5d7cbe0> (<Node.Node object at 0x000001B0A5D7CBE0>)
   yacc.py: 410:
   yacc.py: 411:State  : 65
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs negacionGoal . LexToken(TkFinalG,'Final goal',40,1117)
   yacc.py: 469:Action : Reduce rule [finalGoalTest -> negacionGoal] with [<Node @ 0x1b0a5d7cbe0>] and goto state 61
   yacc.py: 506:Result : <Node @ 0x1b0a5d7c9d0> (<Node.Node object at 0x000001B0A5D7C9D0>)
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest . LexToken(TkFinalG,'Final goal',40,1117)
   yacc.py: 469:Action : Reduce rule [finalGoal -> TkFinalG TkIs finalGoalTest] with ['Final goal','is',<Node @ 0x1b0a5d7c9d0>] and goto state 23
   yacc.py: 506:Result : <Node @ 0x1b0a5d7ca90> (<Node.Node object at 0x000001B0A5D7CA90>)
   yacc.py: 410:
   yacc.py: 411:State  : 23
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst finalGoal . LexToken(TkFinalG,'Final goal',40,1117)
   yacc.py: 469:Action : Reduce rule [worldInst -> finalGoal] with [<Node @ 0x1b0a5d7ca90>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a5d7c8b0> (<Node.Node object at 0x000001B0A5D7C8B0>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs TkNot finalGoalTest TkAnd TkId . LexToken(TkFinalG,'Final goal',40,1117)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['goal3'] and goto state 62
   yacc.py: 506:Result : <str @ 0x10dd2d3e8> ('goal3')
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs TkNot finalGoalTest TkAnd ids . LexToken(TkFinalG,'Final goal',40,1117)
   yacc.py: 471:Action : Reduce rule [finalGoalTest -> ids] with ['goal3'] and goto state 147
   yacc.py: 506:Result : <Node @ 0x10dd2d4a8> (<Node.Node object at 0x10dd2d4a8>)
   yacc.py: 410:
   yacc.py: 411:State  : 147
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs TkNot finalGoalTest TkAnd finalGoalTest . LexToken(TkFinalG,'Final goal',40,1117)
   yacc.py: 471:Action : Reduce rule [conjuncionGoal -> finalGoalTest TkAnd finalGoalTest] with [<Node @ 0x10dd2d3c8>,'and',<Node @ 0x10dd2d4a8>] and goto state 64
   yacc.py: 506:Result : <Node @ 0x10dd2d470> (<Node.Node object at 0x10dd2d470>)
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs TkNot conjuncionGoal . LexToken(TkFinalG,'Final goal',40,1117)
   yacc.py: 471:Action : Reduce rule [finalGoalTest -> conjuncionGoal] with [<Node @ 0x10dd2d470>] and goto state 99
   yacc.py: 506:Result : <Node @ 0x10dd2af98> (<Node.Node object at 0x10dd2af98>)
   yacc.py: 410:
   yacc.py: 411:State  : 99
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs TkNot finalGoalTest . LexToken(TkFinalG,'Final goal',40,1117)
   yacc.py: 471:Action : Reduce rule [negacionGoal -> TkNot finalGoalTest] with ['not',<Node @ 0x10dd2af98>] and goto state 65
   yacc.py: 506:Result : <Node @ 0x10dd2d5c0> (<Node.Node object at 0x10dd2d5c0>)
   yacc.py: 410:
   yacc.py: 411:State  : 65
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs negacionGoal . LexToken(TkFinalG,'Final goal',40,1117)
   yacc.py: 471:Action : Reduce rule [finalGoalTest -> negacionGoal] with [<Node @ 0x10dd2d5c0>] and goto state 61
   yacc.py: 506:Result : <Node @ 0x10dd2d240> (<Node.Node object at 0x10dd2d240>)
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest . LexToken(TkFinalG,'Final goal',40,1117)
   yacc.py: 471:Action : Reduce rule [finalGoal -> TkFinalG TkIs finalGoalTest] with ['Final goal','is',<Node @ 0x10dd2d240>] and goto state 23
   yacc.py: 506:Result : <Node @ 0x10dd2acf8> (<Node.Node object at 0x10dd2acf8>)
   yacc.py: 410:
   yacc.py: 411:State  : 23
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst finalGoal . LexToken(TkFinalG,'Final goal',40,1117)
   yacc.py: 471:Action : Reduce rule [worldInst -> finalGoal] with [<Node @ 0x10dd2acf8>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10dd2d208> (<Node.Node object at 0x10dd2d208>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst . LexToken(TkFinalG,'Final goal',40,1117)
   yacc.py: 445:Action : Shift and goto state 33
   yacc.py: 410:
   yacc.py: 411:State  : 33
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG . LexToken(TkIs,'is',40,1128)
   yacc.py: 445:Action : Shift and goto state 50
   yacc.py: 410:
   yacc.py: 411:State  : 50
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs . LexToken(TkId,'goal1',40,1131)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs TkId . LexToken(TkAnd,'and',40,1137)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['goal1'] and goto state 62
   yacc.py: 506:Result : <str @ 0x1b0a5d821f0> ('goal1')
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs ids . LexToken(TkAnd,'and',40,1137)
   yacc.py: 469:Action : Reduce rule [finalGoalTest -> ids] with ['goal1'] and goto state 61
   yacc.py: 506:Result : <Node @ 0x1b0a5d7cd30> (<Node.Node object at 0x000001B0A5D7CD30>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs TkId . LexToken(TkAnd,'and',40,1137)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['goal1'] and goto state 62
   yacc.py: 506:Result : <str @ 0x10dd2d538> ('goal1')
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs ids . LexToken(TkAnd,'and',40,1137)
   yacc.py: 471:Action : Reduce rule [finalGoalTest -> ids] with ['goal1'] and goto state 61
   yacc.py: 506:Result : <Node @ 0x10dd2d630> (<Node.Node object at 0x10dd2d630>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest . LexToken(TkAnd,'and',40,1137)
   yacc.py: 445:Action : Shift and goto state 97
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkAnd . LexToken(TkId,'goal2',40,1141)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkAnd TkId . LexToken(TkAnd,'and',40,1147)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['goal2'] and goto state 62
   yacc.py: 506:Result : <str @ 0x1b0a5d82330> ('goal2')
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkAnd ids . LexToken(TkAnd,'and',40,1147)
   yacc.py: 469:Action : Reduce rule [finalGoalTest -> ids] with ['goal2'] and goto state 147
   yacc.py: 506:Result : <Node @ 0x1b0a5d7ce50> (<Node.Node object at 0x000001B0A5D7CE50>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkAnd TkId . LexToken(TkAnd,'and',40,1147)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['goal2'] and goto state 62
   yacc.py: 506:Result : <str @ 0x10dd2d570> ('goal2')
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkAnd ids . LexToken(TkAnd,'and',40,1147)
   yacc.py: 471:Action : Reduce rule [finalGoalTest -> ids] with ['goal2'] and goto state 147
   yacc.py: 506:Result : <Node @ 0x10dd2d748> (<Node.Node object at 0x10dd2d748>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 147
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkAnd finalGoalTest . LexToken(TkAnd,'and',40,1147)
   yacc.py: 445:Action : Shift and goto state 97
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkAnd finalGoalTest TkAnd . LexToken(TkId,'goal3',40,1151)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkAnd finalGoalTest TkAnd TkId . LexToken(TkSemicolon,';',40,1156)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['goal3'] and goto state 62
   yacc.py: 506:Result : <str @ 0x1b0a5d824b0> ('goal3')
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkAnd finalGoalTest TkAnd ids . LexToken(TkSemicolon,';',40,1156)
   yacc.py: 469:Action : Reduce rule [finalGoalTest -> ids] with ['goal3'] and goto state 147
   yacc.py: 506:Result : <Node @ 0x1b0a5d7cf70> (<Node.Node object at 0x000001B0A5D7CF70>)
   yacc.py: 410:
   yacc.py: 411:State  : 147
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkAnd finalGoalTest TkAnd finalGoalTest . LexToken(TkSemicolon,';',40,1156)
   yacc.py: 469:Action : Reduce rule [conjuncionGoal -> finalGoalTest TkAnd finalGoalTest] with [<Node @ 0x1b0a5d7ce50>,'and',<Node @ 0x1b0a5d7cf70>] and goto state 64
   yacc.py: 506:Result : <Node @ 0x1b0a5d7cee0> (<Node.Node object at 0x000001B0A5D7CEE0>)
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkAnd conjuncionGoal . LexToken(TkSemicolon,';',40,1156)
   yacc.py: 469:Action : Reduce rule [finalGoalTest -> conjuncionGoal] with [<Node @ 0x1b0a5d7cee0>] and goto state 147
   yacc.py: 506:Result : <Node @ 0x1b0a5d7c6d0> (<Node.Node object at 0x000001B0A5D7C6D0>)
   yacc.py: 410:
   yacc.py: 411:State  : 147
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkAnd finalGoalTest . LexToken(TkSemicolon,';',40,1156)
   yacc.py: 469:Action : Reduce rule [conjuncionGoal -> finalGoalTest TkAnd finalGoalTest] with [<Node @ 0x1b0a5d7cd30>,'and',<Node @ 0x1b0a5d7c6d0>] and goto state 64
   yacc.py: 506:Result : <Node @ 0x1b0a5d7cdc0> (<Node.Node object at 0x000001B0A5D7CDC0>)
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs conjuncionGoal . LexToken(TkSemicolon,';',40,1156)
   yacc.py: 469:Action : Reduce rule [finalGoalTest -> conjuncionGoal] with [<Node @ 0x1b0a5d7cdc0>] and goto state 61
   yacc.py: 506:Result : <Node @ 0x1b0a5d7cc40> (<Node.Node object at 0x000001B0A5D7CC40>)
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest . LexToken(TkSemicolon,';',40,1156)
   yacc.py: 469:Action : Reduce rule [finalGoal -> TkFinalG TkIs finalGoalTest] with ['Final goal','is',<Node @ 0x1b0a5d7cc40>] and goto state 23
   yacc.py: 506:Result : <Node @ 0x1b0a5d7ceb0> (<Node.Node object at 0x000001B0A5D7CEB0>)
   yacc.py: 410:
   yacc.py: 411:State  : 23
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst finalGoal . LexToken(TkSemicolon,';',40,1156)
   yacc.py: 469:Action : Reduce rule [worldInst -> finalGoal] with [<Node @ 0x1b0a5d7ceb0>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x1b0a5d7cbb0> (<Node.Node object at 0x000001B0A5D7CBB0>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkAnd finalGoalTest TkAnd TkId . LexToken(TkSemicolon,';',40,1156)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['goal3'] and goto state 62
   yacc.py: 506:Result : <str @ 0x10dd2d7d8> ('goal3')
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkAnd finalGoalTest TkAnd ids . LexToken(TkSemicolon,';',40,1156)
   yacc.py: 471:Action : Reduce rule [finalGoalTest -> ids] with ['goal3'] and goto state 147
   yacc.py: 506:Result : <Node @ 0x10dd2d860> (<Node.Node object at 0x10dd2d860>)
   yacc.py: 410:
   yacc.py: 411:State  : 147
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkAnd finalGoalTest TkAnd finalGoalTest . LexToken(TkSemicolon,';',40,1156)
   yacc.py: 471:Action : Reduce rule [conjuncionGoal -> finalGoalTest TkAnd finalGoalTest] with [<Node @ 0x10dd2d748>,'and',<Node @ 0x10dd2d860>] and goto state 64
   yacc.py: 506:Result : <Node @ 0x10dd2d828> (<Node.Node object at 0x10dd2d828>)
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkAnd conjuncionGoal . LexToken(TkSemicolon,';',40,1156)
   yacc.py: 471:Action : Reduce rule [finalGoalTest -> conjuncionGoal] with [<Node @ 0x10dd2d828>] and goto state 147
   yacc.py: 506:Result : <Node @ 0x10dd2d320> (<Node.Node object at 0x10dd2d320>)
   yacc.py: 410:
   yacc.py: 411:State  : 147
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest TkAnd finalGoalTest . LexToken(TkSemicolon,';',40,1156)
   yacc.py: 471:Action : Reduce rule [conjuncionGoal -> finalGoalTest TkAnd finalGoalTest] with [<Node @ 0x10dd2d630>,'and',<Node @ 0x10dd2d320>] and goto state 64
   yacc.py: 506:Result : <Node @ 0x10dd2d978> (<Node.Node object at 0x10dd2d978>)
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs conjuncionGoal . LexToken(TkSemicolon,';',40,1156)
   yacc.py: 471:Action : Reduce rule [finalGoalTest -> conjuncionGoal] with [<Node @ 0x10dd2d978>] and goto state 61
   yacc.py: 506:Result : <Node @ 0x10dd2d518> (<Node.Node object at 0x10dd2d518>)
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkFinalG TkIs finalGoalTest . LexToken(TkSemicolon,';',40,1156)
   yacc.py: 471:Action : Reduce rule [finalGoal -> TkFinalG TkIs finalGoalTest] with ['Final goal','is',<Node @ 0x10dd2d518>] and goto state 23
   yacc.py: 506:Result : <Node @ 0x10dd2d780> (<Node.Node object at 0x10dd2d780>)
   yacc.py: 410:
   yacc.py: 411:State  : 23
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst finalGoal . LexToken(TkSemicolon,';',40,1156)
   yacc.py: 471:Action : Reduce rule [worldInst -> finalGoal] with [<Node @ 0x10dd2d780>] and goto state 14
   yacc.py: 506:Result : <Node @ 0x10dd2d4e0> (<Node.Node object at 0x10dd2d4e0>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst . LexToken(TkSemicolon,';',40,1156)
   yacc.py: 445:Action : Shift and goto state 36
   yacc.py: 410:
   yacc.py: 411:State  : 36
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkSemicolon . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst TkSemicolon] with [<Node @ 0x1b0a5d7cbb0>,';'] and goto state 37
   yacc.py: 506:Result : <Node @ 0x1b0a5d7cd90> (<Node.Node object at 0x000001B0A5D7CD90>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x1b0a5d7c8b0>,<Node @ 0x1b0a5d7cd90>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x1b0a5d7cf40> (<Node.Node object at 0x000001B0A5D7CF40>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x1b0a5d7c790>,<Node @ 0x1b0a5d7cf40>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x1b0a5d7cca0> (<Node.Node object at 0x000001B0A5D7CCA0>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x1b0a5d7c5e0>,<Node @ 0x1b0a5d7cca0>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x1b0a5d7c940> (<Node.Node object at 0x000001B0A5D7C940>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x1b0a5d7c490>,<Node @ 0x1b0a5d7c940>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x1b0a5d7c7c0> (<Node.Node object at 0x000001B0A5D7C7C0>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x1b0a5d79700>,<Node @ 0x1b0a5d7c7c0>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x1b0a5d7c640> (<Node.Node object at 0x000001B0A5D7C640>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x1b0a5d79d60>,<Node @ 0x1b0a5d7c640>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x1b0a5d7c4f0> (<Node.Node object at 0x000001B0A5D7C4F0>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x1b0a5d79dc0>,<Node @ 0x1b0a5d7c4f0>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x1b0a5d7c2b0> (<Node.Node object at 0x000001B0A5D7C2B0>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x1b0a5d79f10>,<Node @ 0x1b0a5d7c2b0>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x1b0a5d7c130> (<Node.Node object at 0x000001B0A5D7C130>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x1b0a5d79c10>,<Node @ 0x1b0a5d7c130>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x1b0a5d79f40> (<Node.Node object at 0x000001B0A5D79F40>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x1b0a5d79b50>,<Node @ 0x1b0a5d79f40>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x1b0a5d79e80> (<Node.Node object at 0x000001B0A5D79E80>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x1b0a5d79a60>,<Node @ 0x1b0a5d79e80>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x1b0a5d79cd0> (<Node.Node object at 0x000001B0A5D79CD0>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x1b0a5d79910>,<Node @ 0x1b0a5d79cd0>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x1b0a5d79b80> (<Node.Node object at 0x000001B0A5D79B80>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x1b0a5d797c0>,<Node @ 0x1b0a5d79b80>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x1b0a5d79ac0> (<Node.Node object at 0x000001B0A5D79AC0>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x1b0a5d79490>,<Node @ 0x1b0a5d79ac0>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x1b0a5d79970> (<Node.Node object at 0x000001B0A5D79970>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x1b0a5d5dd90>,<Node @ 0x1b0a5d79970>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x1b0a5d79820> (<Node.Node object at 0x000001B0A5D79820>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x1b0a5d5db80>,<Node @ 0x1b0a5d79820>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x1b0a5d79610> (<Node.Node object at 0x000001B0A5D79610>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x1b0a5d5dbb0>,<Node @ 0x1b0a5d79610>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x1b0a5d794f0> (<Node.Node object at 0x000001B0A5D794F0>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x1b0a5d5dc10>,<Node @ 0x1b0a5d794f0>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x1b0a5d793d0> (<Node.Node object at 0x000001B0A5D793D0>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x1b0a5d5de50>,<Node @ 0x1b0a5d793d0>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x1b0a5d792b0> (<Node.Node object at 0x000001B0A5D792B0>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x1b0a5d5dfa0>,<Node @ 0x1b0a5d792b0>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x1b0a5d79190> (<Node.Node object at 0x000001B0A5D79190>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x1b0a5d5df70>,<Node @ 0x1b0a5d79190>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x1b0a5d79100> (<Node.Node object at 0x000001B0A5D79100>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x1b0a5d5df40>,<Node @ 0x1b0a5d79100>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x1b0a5d5df10> (<Node.Node object at 0x000001B0A5D5DF10>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x1b0a58ed6a0>,<Node @ 0x1b0a5d5df10>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x1b0a5d5d9a0> (<Node.Node object at 0x000001B0A5D5D9A0>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 469:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x1b0a58edb20>,<Node @ 0x1b0a5d5d9a0>] and goto state 12
   yacc.py: 506:Result : <Node @ 0x1b0a5d5d580> (<Node.Node object at 0x000001B0A5D5D580>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst TkSemicolon . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst TkSemicolon] with [<Node @ 0x10dd2d4e0>,';'] and goto state 37
   yacc.py: 506:Result : <Node @ 0x10dd2d6d8> (<Node.Node object at 0x10dd2d6d8>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x10dd2d208>,<Node @ 0x10dd2d6d8>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x10dd2d9e8> (<Node.Node object at 0x10dd2d9e8>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x10dd2afd0>,<Node @ 0x10dd2d9e8>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x10dd2d668> (<Node.Node object at 0x10dd2d668>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x10dd2add8>,<Node @ 0x10dd2d668>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x10dd2d358> (<Node.Node object at 0x10dd2d358>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x10dd2aba8>,<Node @ 0x10dd2d358>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x10dd2d048> (<Node.Node object at 0x10dd2d048>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x10dd2a940>,<Node @ 0x10dd2d048>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x10dd2ae80> (<Node.Node object at 0x10dd2ae80>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x10dd2a908>,<Node @ 0x10dd2ae80>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x10dd2abe0> (<Node.Node object at 0x10dd2abe0>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x10dd2a748>,<Node @ 0x10dd2abe0>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x10dd2a9e8> (<Node.Node object at 0x10dd2a9e8>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x10dd2a470>,<Node @ 0x10dd2a9e8>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x10dd2a828> (<Node.Node object at 0x10dd2a828>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x10dd27e48>,<Node @ 0x10dd2a828>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x10dd2a550> (<Node.Node object at 0x10dd2a550>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x10dd27e80>,<Node @ 0x10dd2a550>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x10dd2a588> (<Node.Node object at 0x10dd2a588>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x10dd27f60>,<Node @ 0x10dd2a588>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x10dd2a390> (<Node.Node object at 0x10dd2a390>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x10dd27c88>,<Node @ 0x10dd2a390>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x10dd2a1d0> (<Node.Node object at 0x10dd2a1d0>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x10dd27c18>,<Node @ 0x10dd2a1d0>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x10dd27e10> (<Node.Node object at 0x10dd27e10>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x10dd27a58>,<Node @ 0x10dd27e10>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x10dd27cc0> (<Node.Node object at 0x10dd27cc0>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x10dd278d0>,<Node @ 0x10dd27cc0>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x10dd27c50> (<Node.Node object at 0x10dd27c50>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x10dd27748>,<Node @ 0x10dd27c50>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x10dd27a90> (<Node.Node object at 0x10dd27a90>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x10dd275f8>,<Node @ 0x10dd27a90>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x10dd27978> (<Node.Node object at 0x10dd27978>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x10dd274a8>,<Node @ 0x10dd27978>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x10dd27710> (<Node.Node object at 0x10dd27710>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x10dd272b0>,<Node @ 0x10dd27710>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x10dd27668> (<Node.Node object at 0x10dd27668>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x10dd1cf28>,<Node @ 0x10dd27668>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x10dd274e0> (<Node.Node object at 0x10dd274e0>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x10dd1cac8>,<Node @ 0x10dd274e0>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x10dd273c8> (<Node.Node object at 0x10dd273c8>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x10dbe9278>,<Node @ 0x10dd273c8>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x10dd1ce80> (<Node.Node object at 0x10dd1ce80>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x10db3ba20>,<Node @ 0x10dd1ce80>] and goto state 37
   yacc.py: 506:Result : <Node @ 0x10dd1cef0> (<Node.Node object at 0x10dd1cef0>)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 430:Defaulted state 37: Reduce using 7
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInst worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 471:Action : Reduce rule [worldInstSet -> worldInst worldInstSet] with [<Node @ 0x10dd1cd30>,<Node @ 0x10dd1cef0>] and goto state 12
   yacc.py: 506:Result : <Node @ 0x10dd1c940> (<Node.Node object at 0x10dd1c940>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 12
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInstSet . LexToken(TkEndWorld,'end-world',41,1158)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock TkBeginWorld ids worldInstSet TkEndWorld . LexToken(TkBeginTask,'begin-task',42,1168)
   yacc.py: 469:Action : Reduce rule [worldBlock -> TkBeginWorld ids worldInstSet TkEndWorld] with ['begin-world','world1',<Node @ 0x1b0a5d5d580>,'end-world'] and goto state 3
   yacc.py: 506:Result : <Node @ 0x1b0a5d5d8e0> (<Node.Node object at 0x000001B0A5D5D8E0>)
=======
   yacc.py: 435:Stack  : worldBlock TkBeginWorld ids worldInstSet TkEndWorld . LexToken(TkBeginTask,'begin-task',42,1168)
   yacc.py: 471:Action : Reduce rule [worldBlock -> TkBeginWorld ids worldInstSet TkEndWorld] with ['begin-world','world1',<Node @ 0x10dd1c940>,'end-world'] and goto state 3
   yacc.py: 506:Result : <Node @ 0x10dd1cfd0> (<Node.Node object at 0x10dd1cfd0>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 3
   yacc.py: 435:Stack  : worldBlock worldBlock . LexToken(TkBeginTask,'begin-task',42,1168)
   yacc.py: 445:Action : Shift and goto state 6
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask . LexToken(TkId,'task1',42,1179)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock worldBlock TkBeginTask TkId . LexToken(TkOn,'on',42,1185)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['task1'] and goto state 11
   yacc.py: 506:Result : <str @ 0x1b0a5d82db0> ('task1')
=======
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask TkId . LexToken(TkOn,'on',42,1185)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['task1'] and goto state 11
   yacc.py: 506:Result : <str @ 0x10dd2d6f8> ('task1')
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids . LexToken(TkOn,'on',42,1185)
   yacc.py: 445:Action : Shift and goto state 34
   yacc.py: 410:
   yacc.py: 411:State  : 34
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn . LexToken(TkId,'world1',42,1188)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock worldBlock TkBeginTask ids TkOn TkId . LexToken(TkDefine,'define',43,1195)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['world1'] and goto state 51
   yacc.py: 506:Result : <str @ 0x1b0a5d82fb0> ('world1')
=======
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn TkId . LexToken(TkDefine,'define',43,1195)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['world1'] and goto state 51
   yacc.py: 506:Result : <str @ 0x10dd1c730> ('world1')
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids . LexToken(TkDefine,'define',43,1195)
   yacc.py: 445:Action : Shift and goto state 87
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids TkDefine . LexToken(TkId,'fun',43,1202)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids TkDefine TkId . LexToken(TkAs,'as',43,1206)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['fun'] and goto state 131
   yacc.py: 506:Result : <str @ 0x1b0a5d84070> ('fun')
=======
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids TkDefine TkId . LexToken(TkAs,'as',43,1206)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['fun'] and goto state 131
   yacc.py: 506:Result : <str @ 0x10dd2dae8> ('fun')
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids TkDefine ids . LexToken(TkAs,'as',43,1206)
   yacc.py: 445:Action : Shift and goto state 162
   yacc.py: 410:
   yacc.py: 411:State  : 162
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids TkDefine ids TkAs . LexToken(TkBegin,'begin',43,1209)
   yacc.py: 469:Action : Reduce rule [instructionDefineAs -> TkDefine ids TkAs] with ['define','fun','as'] and goto state 76
   yacc.py: 506:Result : <Node @ 0x1b0a5d830d0> (<Node.Node object at 0x000001B0A5D830D0>)
=======
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids TkDefine ids TkAs . LexToken(TkBegin,'begin',43,1209)
   yacc.py: 471:Action : Reduce rule [instructionDefineAs -> TkDefine ids TkAs] with ['define','fun','as'] and goto state 76
   yacc.py: 506:Result : <Node @ 0x10dd2db38> (<Node.Node object at 0x10dd2db38>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs . LexToken(TkBegin,'begin',43,1209)
   yacc.py: 445:Action : Shift and goto state 75
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin . LexToken(TkMove,'move',44,1219)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin TkMove . LexToken(TkSemicolon,';',44,1223)
   yacc.py: 469:Action : Reduce rule [primitiveInstructions -> TkMove] with ['move'] and goto state 71
   yacc.py: 506:Result : <Node @ 0x1b0a5d5dac0> (<Node.Node object at 0x000001B0A5D5DAC0>)
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin primitiveInstructions . LexToken(TkSemicolon,';',44,1223)
   yacc.py: 469:Action : Reduce rule [instructions -> primitiveInstructions] with [<Node @ 0x1b0a5d5dac0>] and goto state 69
   yacc.py: 506:Result : <Node @ 0x1b0a5d833a0> (<Node.Node object at 0x000001B0A5D833A0>)
=======
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin TkMove . LexToken(TkSemicolon,';',44,1223)
   yacc.py: 471:Action : Reduce rule [primitiveInstructions -> TkMove] with ['move'] and goto state 71
   yacc.py: 506:Result : <Node @ 0x10dd2da90> (<Node.Node object at 0x10dd2da90>)
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin primitiveInstructions . LexToken(TkSemicolon,';',44,1223)
   yacc.py: 471:Action : Reduce rule [instructions -> primitiveInstructions] with [<Node @ 0x10dd2da90>] and goto state 69
   yacc.py: 506:Result : <Node @ 0x10dd2dc50> (<Node.Node object at 0x10dd2dc50>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 69
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions . LexToken(TkSemicolon,';',44,1223)
   yacc.py: 445:Action : Shift and goto state 101
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon . LexToken(TkPick,'pick',45,1229)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon TkPick . LexToken(TkId,'flower',45,1234)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon TkPick TkId . LexToken(TkSemicolon,';',45,1240)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['flower'] and goto state 123
   yacc.py: 506:Result : <str @ 0x1b0a5d841f0> ('flower')
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 434:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon TkPick ids . LexToken(TkSemicolon,';',45,1240)
   yacc.py: 469:Action : Reduce rule [primitiveInstructions -> TkPick ids] with ['pick','flower'] and goto state 71
   yacc.py: 506:Result : <Node @ 0x1b0a5d834f0> (<Node.Node object at 0x000001B0A5D834F0>)
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon primitiveInstructions . LexToken(TkSemicolon,';',45,1240)
   yacc.py: 469:Action : Reduce rule [instructions -> primitiveInstructions] with [<Node @ 0x1b0a5d834f0>] and goto state 69
   yacc.py: 506:Result : <Node @ 0x1b0a5d83460> (<Node.Node object at 0x000001B0A5D83460>)
=======
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon TkPick TkId . LexToken(TkSemicolon,';',45,1240)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['flower'] and goto state 123
   yacc.py: 506:Result : <str @ 0x10dd2dd50> ('flower')
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon TkPick ids . LexToken(TkSemicolon,';',45,1240)
   yacc.py: 471:Action : Reduce rule [primitiveInstructions -> TkPick ids] with ['pick','flower'] and goto state 71
   yacc.py: 506:Result : <Node @ 0x10dd2dcf8> (<Node.Node object at 0x10dd2dcf8>)
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon primitiveInstructions . LexToken(TkSemicolon,';',45,1240)
   yacc.py: 471:Action : Reduce rule [instructions -> primitiveInstructions] with [<Node @ 0x10dd2dcf8>] and goto state 69
   yacc.py: 506:Result : <Node @ 0x10dd2db70> (<Node.Node object at 0x10dd2db70>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 69
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions . LexToken(TkSemicolon,';',45,1240)
   yacc.py: 445:Action : Shift and goto state 101
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon . LexToken(TkSet,'set',46,1246)
   yacc.py: 445:Action : Shift and goto state 82
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon TkSet . LexToken(TkId,'willyishungry',46,1250)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon TkSet TkId . LexToken(TkSemicolon,';',46,1263)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['willyishungry'] and goto state 125
   yacc.py: 506:Result : <str @ 0x1b0a5d842b0> ('willyishungry')
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 434:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon TkSet ids . LexToken(TkSemicolon,';',46,1263)
   yacc.py: 469:Action : Reduce rule [primitiveInstructions -> TkSet ids] with ['set','willyishungry'] and goto state 71
   yacc.py: 506:Result : <Node @ 0x1b0a5d83670> (<Node.Node object at 0x000001B0A5D83670>)
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon primitiveInstructions . LexToken(TkSemicolon,';',46,1263)
   yacc.py: 469:Action : Reduce rule [instructions -> primitiveInstructions] with [<Node @ 0x1b0a5d83670>] and goto state 69
   yacc.py: 506:Result : <Node @ 0x1b0a5d835e0> (<Node.Node object at 0x000001B0A5D835E0>)
=======
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon TkSet TkId . LexToken(TkSemicolon,';',46,1263)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['willyishungry'] and goto state 125
   yacc.py: 506:Result : <str @ 0x10dd30270> ('willyishungry')
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon TkSet ids . LexToken(TkSemicolon,';',46,1263)
   yacc.py: 471:Action : Reduce rule [primitiveInstructions -> TkSet ids] with ['set','willyishungry'] and goto state 71
   yacc.py: 506:Result : <Node @ 0x10dd2df28> (<Node.Node object at 0x10dd2df28>)
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon primitiveInstructions . LexToken(TkSemicolon,';',46,1263)
   yacc.py: 471:Action : Reduce rule [instructions -> primitiveInstructions] with [<Node @ 0x10dd2df28>] and goto state 69
   yacc.py: 506:Result : <Node @ 0x10dd2dda0> (<Node.Node object at 0x10dd2dda0>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 69
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions . LexToken(TkSemicolon,';',46,1263)
   yacc.py: 445:Action : Shift and goto state 101
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon . LexToken(TkSet,'set',47,1269)
   yacc.py: 445:Action : Shift and goto state 82
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon TkSet . LexToken(TkId,'willyisangry',47,1273)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon TkSet TkId . LexToken(TkTo,'to',47,1286)
   yacc.py: 469:Action : Reduce rule [ids -> TkId] with ['willyisangry'] and goto state 125
   yacc.py: 506:Result : <str @ 0x1b0a5d844f0> ('willyisangry')
=======
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon TkSet TkId . LexToken(TkTo,'to',47,1286)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['willyisangry'] and goto state 125
   yacc.py: 506:Result : <str @ 0x10dd303f0> ('willyisangry')
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon TkSet ids . LexToken(TkTo,'to',47,1286)
   yacc.py: 445:Action : Shift and goto state 160
   yacc.py: 410:
   yacc.py: 411:State  : 160
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon TkSet ids TkTo . LexToken(TkFalse,'false',47,1289)
   yacc.py: 445:Action : Shift and goto state 180
   yacc.py: 410:
   yacc.py: 411:State  : 180
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon TkSet ids TkTo TkFalse . LexToken(TkSemicolon,';',47,1294)
   yacc.py: 469:Action : Reduce rule [primitiveInstructions -> TkSet ids TkTo TkFalse] with ['set','willyisangry','to','false'] and goto state 71
   yacc.py: 506:Result : <Node @ 0x1b0a5d837f0> (<Node.Node object at 0x000001B0A5D837F0>)
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon primitiveInstructions . LexToken(TkSemicolon,';',47,1294)
   yacc.py: 469:Action : Reduce rule [instructions -> primitiveInstructions] with [<Node @ 0x1b0a5d837f0>] and goto state 69
   yacc.py: 506:Result : <Node @ 0x1b0a5d83940> (<Node.Node object at 0x000001B0A5D83940>)
=======
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon TkSet ids TkTo TkFalse . LexToken(TkSemicolon,';',47,1294)
   yacc.py: 471:Action : Reduce rule [primitiveInstructions -> TkSet ids TkTo TkFalse] with ['set','willyisangry','to','false'] and goto state 71
   yacc.py: 506:Result : <Node @ 0x10dd32080> (<Node.Node object at 0x10dd32080>)
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon primitiveInstructions . LexToken(TkSemicolon,';',47,1294)
   yacc.py: 471:Action : Reduce rule [instructions -> primitiveInstructions] with [<Node @ 0x10dd32080>] and goto state 69
   yacc.py: 506:Result : <Node @ 0x10dd2de48> (<Node.Node object at 0x10dd2de48>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 69
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions . LexToken(TkSemicolon,';',47,1294)
   yacc.py: 445:Action : Shift and goto state 101
   yacc.py: 410:
   yacc.py: 411:State  : 101
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon . LexToken(TkEnd,'end',48,1300)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 70
   yacc.py: 548:Result : <NoneType @ 0x7ffbf8bf4880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 70
   yacc.py: 434:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon empty . LexToken(TkEnd,'end',48,1300)
   yacc.py: 469:Action : Reduce rule [multiInstructions -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x7ffbf8bf4880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 434:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon multiInstructions . LexToken(TkEnd,'end',48,1300)
   yacc.py: 469:Action : Reduce rule [multiInstructions -> instructions TkSemicolon multiInstructions] with [<Node @ 0x1b0a5d83940>,';',None] and goto state 149
   yacc.py: 506:Result : <Node @ 0x1b0a5d83790> (<Node.Node object at 0x000001B0A5D83790>)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 434:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon multiInstructions . LexToken(TkEnd,'end',48,1300)
   yacc.py: 469:Action : Reduce rule [multiInstructions -> instructions TkSemicolon multiInstructions] with [<Node @ 0x1b0a5d835e0>,';',<Node @ 0x1b0a5d83790>] and goto state 149
   yacc.py: 506:Result : <Node @ 0x1b0a5d83970> (<Node.Node object at 0x000001B0A5D83970>)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 434:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon multiInstructions . LexToken(TkEnd,'end',48,1300)
   yacc.py: 469:Action : Reduce rule [multiInstructions -> instructions TkSemicolon multiInstructions] with [<Node @ 0x1b0a5d83460>,';',<Node @ 0x1b0a5d83970>] and goto state 149
   yacc.py: 506:Result : <Node @ 0x1b0a5d83700> (<Node.Node object at 0x000001B0A5D83700>)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 434:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon multiInstructions . LexToken(TkEnd,'end',48,1300)
   yacc.py: 469:Action : Reduce rule [multiInstructions -> instructions TkSemicolon multiInstructions] with [<Node @ 0x1b0a5d833a0>,';',<Node @ 0x1b0a5d83700>] and goto state 121
   yacc.py: 506:Result : <Node @ 0x1b0a5d83580> (<Node.Node object at 0x000001B0A5D83580>)
=======
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon . LexToken(TkDefine,'define',48,1300)
   yacc.py: 445:Action : Shift and goto state 87
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon TkDefine . LexToken(TkId,'fun',48,1307)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon TkDefine TkId . LexToken(TkAs,'as',48,1311)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['fun'] and goto state 131
   yacc.py: 506:Result : <str @ 0x10dd32148> ('fun')
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon TkDefine ids . LexToken(TkAs,'as',48,1311)
   yacc.py: 445:Action : Shift and goto state 162
   yacc.py: 410:
   yacc.py: 411:State  : 162
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon TkDefine ids TkAs . LexToken(TkBegin,'begin',48,1314)
   yacc.py: 471:Action : Reduce rule [instructionDefineAs -> TkDefine ids TkAs] with ['define','fun','as'] and goto state 76
   yacc.py: 506:Result : <Node @ 0x10dd32198> (<Node.Node object at 0x10dd32198>)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs . LexToken(TkBegin,'begin',48,1314)
   yacc.py: 445:Action : Shift and goto state 75
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin . LexToken(TkMove,'move',49,1328)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin TkMove . LexToken(TkSemicolon,';',49,1332)
   yacc.py: 471:Action : Reduce rule [primitiveInstructions -> TkMove] with ['move'] and goto state 71
   yacc.py: 506:Result : <Node @ 0x10dd2dfd0> (<Node.Node object at 0x10dd2dfd0>)
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin primitiveInstructions . LexToken(TkSemicolon,';',49,1332)
   yacc.py: 471:Action : Reduce rule [instructions -> primitiveInstructions] with [<Node @ 0x10dd2dfd0>] and goto state 69
   yacc.py: 506:Result : <Node @ 0x10dd32320> (<Node.Node object at 0x10dd32320>)
   yacc.py: 410:
   yacc.py: 411:State  : 69
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions . LexToken(TkSemicolon,';',49,1332)
   yacc.py: 445:Action : Shift and goto state 101
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon . LexToken(TkPick,'pick',50,1342)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon TkPick . LexToken(TkId,'flower',50,1347)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon TkPick TkId . LexToken(TkSemicolon,';',50,1353)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['flower'] and goto state 123
   yacc.py: 506:Result : <str @ 0x10dd32420> ('flower')
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon TkPick ids . LexToken(TkSemicolon,';',50,1353)
   yacc.py: 471:Action : Reduce rule [primitiveInstructions -> TkPick ids] with ['pick','flower'] and goto state 71
   yacc.py: 506:Result : <Node @ 0x10dd323c8> (<Node.Node object at 0x10dd323c8>)
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon primitiveInstructions . LexToken(TkSemicolon,';',50,1353)
   yacc.py: 471:Action : Reduce rule [instructions -> primitiveInstructions] with [<Node @ 0x10dd323c8>] and goto state 69
   yacc.py: 506:Result : <Node @ 0x10dd32240> (<Node.Node object at 0x10dd32240>)
   yacc.py: 410:
   yacc.py: 411:State  : 69
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions . LexToken(TkSemicolon,';',50,1353)
   yacc.py: 445:Action : Shift and goto state 101
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon . LexToken(TkSet,'set',51,1363)
   yacc.py: 445:Action : Shift and goto state 82
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon TkSet . LexToken(TkId,'willyishungry',51,1367)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon TkSet TkId . LexToken(TkSemicolon,';',51,1380)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['willyishungry'] and goto state 125
   yacc.py: 506:Result : <str @ 0x10dd306f0> ('willyishungry')
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon TkSet ids . LexToken(TkSemicolon,';',51,1380)
   yacc.py: 471:Action : Reduce rule [primitiveInstructions -> TkSet ids] with ['set','willyishungry'] and goto state 71
   yacc.py: 506:Result : <Node @ 0x10dd325f8> (<Node.Node object at 0x10dd325f8>)
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon primitiveInstructions . LexToken(TkSemicolon,';',51,1380)
   yacc.py: 471:Action : Reduce rule [instructions -> primitiveInstructions] with [<Node @ 0x10dd325f8>] and goto state 69
   yacc.py: 506:Result : <Node @ 0x10dd32470> (<Node.Node object at 0x10dd32470>)
   yacc.py: 410:
   yacc.py: 411:State  : 69
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions . LexToken(TkSemicolon,';',51,1380)
   yacc.py: 445:Action : Shift and goto state 101
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon . LexToken(TkSet,'set',52,1390)
   yacc.py: 445:Action : Shift and goto state 82
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon TkSet . LexToken(TkId,'willyisangry',52,1394)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon TkSet TkId . LexToken(TkTo,'to',52,1407)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['willyisangry'] and goto state 125
   yacc.py: 506:Result : <str @ 0x10dd307f0> ('willyisangry')
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon TkSet ids . LexToken(TkTo,'to',52,1407)
   yacc.py: 445:Action : Shift and goto state 160
   yacc.py: 410:
   yacc.py: 411:State  : 160
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon TkSet ids TkTo . LexToken(TkFalse,'false',52,1410)
   yacc.py: 445:Action : Shift and goto state 180
   yacc.py: 410:
   yacc.py: 411:State  : 180
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon TkSet ids TkTo TkFalse . LexToken(TkSemicolon,';',52,1415)
   yacc.py: 471:Action : Reduce rule [primitiveInstructions -> TkSet ids TkTo TkFalse] with ['set','willyisangry','to','false'] and goto state 71
   yacc.py: 506:Result : <Node @ 0x10dd32710> (<Node.Node object at 0x10dd32710>)
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon primitiveInstructions . LexToken(TkSemicolon,';',52,1415)
   yacc.py: 471:Action : Reduce rule [instructions -> primitiveInstructions] with [<Node @ 0x10dd32710>] and goto state 69
   yacc.py: 506:Result : <Node @ 0x10dd32518> (<Node.Node object at 0x10dd32518>)
   yacc.py: 410:
   yacc.py: 411:State  : 69
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions . LexToken(TkSemicolon,';',52,1415)
   yacc.py: 445:Action : Shift and goto state 101
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon . LexToken(TkDefine,'define',53,1425)
   yacc.py: 445:Action : Shift and goto state 87
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon TkDefine . LexToken(TkId,'fun',53,1432)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon TkDefine TkId . LexToken(TkAs,'as',53,1436)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['fun'] and goto state 131
   yacc.py: 506:Result : <str @ 0x10dd327d8> ('fun')
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon TkDefine ids . LexToken(TkAs,'as',53,1436)
   yacc.py: 445:Action : Shift and goto state 162
   yacc.py: 410:
   yacc.py: 411:State  : 162
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon TkDefine ids TkAs . LexToken(TkBegin,'begin',53,1439)
   yacc.py: 471:Action : Reduce rule [instructionDefineAs -> TkDefine ids TkAs] with ['define','fun','as'] and goto state 76
   yacc.py: 506:Result : <Node @ 0x10dd32828> (<Node.Node object at 0x10dd32828>)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs . LexToken(TkBegin,'begin',53,1439)
   yacc.py: 445:Action : Shift and goto state 75
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin . LexToken(TkMove,'move',54,1457)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin TkMove . LexToken(TkSemicolon,';',54,1461)
   yacc.py: 471:Action : Reduce rule [primitiveInstructions -> TkMove] with ['move'] and goto state 71
   yacc.py: 506:Result : <Node @ 0x10dd326a0> (<Node.Node object at 0x10dd326a0>)
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin primitiveInstructions . LexToken(TkSemicolon,';',54,1461)
   yacc.py: 471:Action : Reduce rule [instructions -> primitiveInstructions] with [<Node @ 0x10dd326a0>] and goto state 69
   yacc.py: 506:Result : <Node @ 0x10dd329b0> (<Node.Node object at 0x10dd329b0>)
   yacc.py: 410:
   yacc.py: 411:State  : 69
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions . LexToken(TkSemicolon,';',54,1461)
   yacc.py: 445:Action : Shift and goto state 101
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon . LexToken(TkPick,'pick',55,1475)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon TkPick . LexToken(TkId,'flower',55,1480)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon TkPick TkId . LexToken(TkSemicolon,';',55,1486)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['flower'] and goto state 123
   yacc.py: 506:Result : <str @ 0x10dd32ab0> ('flower')
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon TkPick ids . LexToken(TkSemicolon,';',55,1486)
   yacc.py: 471:Action : Reduce rule [primitiveInstructions -> TkPick ids] with ['pick','flower'] and goto state 71
   yacc.py: 506:Result : <Node @ 0x10dd32a58> (<Node.Node object at 0x10dd32a58>)
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon primitiveInstructions . LexToken(TkSemicolon,';',55,1486)
   yacc.py: 471:Action : Reduce rule [instructions -> primitiveInstructions] with [<Node @ 0x10dd32a58>] and goto state 69
   yacc.py: 506:Result : <Node @ 0x10dd328d0> (<Node.Node object at 0x10dd328d0>)
   yacc.py: 410:
   yacc.py: 411:State  : 69
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions . LexToken(TkSemicolon,';',55,1486)
   yacc.py: 445:Action : Shift and goto state 101
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon . LexToken(TkSet,'set',56,1500)
   yacc.py: 445:Action : Shift and goto state 82
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon TkSet . LexToken(TkId,'willyishungry',56,1504)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon TkSet TkId . LexToken(TkSemicolon,';',56,1517)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['willyishungry'] and goto state 125
   yacc.py: 506:Result : <str @ 0x10dd30af0> ('willyishungry')
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon TkSet ids . LexToken(TkSemicolon,';',56,1517)
   yacc.py: 471:Action : Reduce rule [primitiveInstructions -> TkSet ids] with ['set','willyishungry'] and goto state 71
   yacc.py: 506:Result : <Node @ 0x10dd32c88> (<Node.Node object at 0x10dd32c88>)
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon primitiveInstructions . LexToken(TkSemicolon,';',56,1517)
   yacc.py: 471:Action : Reduce rule [instructions -> primitiveInstructions] with [<Node @ 0x10dd32c88>] and goto state 69
   yacc.py: 506:Result : <Node @ 0x10dd32b00> (<Node.Node object at 0x10dd32b00>)
   yacc.py: 410:
   yacc.py: 411:State  : 69
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions . LexToken(TkSemicolon,';',56,1517)
   yacc.py: 445:Action : Shift and goto state 101
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon . LexToken(TkSet,'set',57,1531)
   yacc.py: 445:Action : Shift and goto state 82
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon TkSet . LexToken(TkId,'willyisangry',57,1535)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon TkSet TkId . LexToken(TkTo,'to',57,1548)
   yacc.py: 471:Action : Reduce rule [ids -> TkId] with ['willyisangry'] and goto state 125
   yacc.py: 506:Result : <str @ 0x10dd30bf0> ('willyisangry')
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon TkSet ids . LexToken(TkTo,'to',57,1548)
   yacc.py: 445:Action : Shift and goto state 160
   yacc.py: 410:
   yacc.py: 411:State  : 160
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon TkSet ids TkTo . LexToken(TkFalse,'false',57,1551)
   yacc.py: 445:Action : Shift and goto state 180
   yacc.py: 410:
   yacc.py: 411:State  : 180
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon TkSet ids TkTo TkFalse . LexToken(TkSemicolon,';',57,1556)
   yacc.py: 471:Action : Reduce rule [primitiveInstructions -> TkSet ids TkTo TkFalse] with ['set','willyisangry','to','false'] and goto state 71
   yacc.py: 506:Result : <Node @ 0x10dd32da0> (<Node.Node object at 0x10dd32da0>)
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon primitiveInstructions . LexToken(TkSemicolon,';',57,1556)
   yacc.py: 471:Action : Reduce rule [instructions -> primitiveInstructions] with [<Node @ 0x10dd32da0>] and goto state 69
   yacc.py: 506:Result : <Node @ 0x10dd32ba8> (<Node.Node object at 0x10dd32ba8>)
   yacc.py: 410:
   yacc.py: 411:State  : 69
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions . LexToken(TkSemicolon,';',57,1556)
   yacc.py: 445:Action : Shift and goto state 101
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon . LexToken(TkEnd,'end',58,1566)
   yacc.py: 474:Action : Reduce rule [empty -> <empty>] with [] and goto state 70
   yacc.py: 548:Result : <NoneType @ 0x10d7cd068> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 70
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon empty . LexToken(TkEnd,'end',58,1566)
   yacc.py: 471:Action : Reduce rule [multiInstructions -> empty] with [None] and goto state 149
   yacc.py: 506:Result : <NoneType @ 0x10d7cd068> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon multiInstructions . LexToken(TkEnd,'end',58,1566)
   yacc.py: 471:Action : Reduce rule [multiInstructions -> instructions TkSemicolon multiInstructions] with [<Node @ 0x10dd32ba8>,';',None] and goto state 149
   yacc.py: 506:Result : <Node @ 0x10dd32cc0> (<Node.Node object at 0x10dd32cc0>)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon multiInstructions . LexToken(TkEnd,'end',58,1566)
   yacc.py: 471:Action : Reduce rule [multiInstructions -> instructions TkSemicolon multiInstructions] with [<Node @ 0x10dd32b00>,';',<Node @ 0x10dd32cc0>] and goto state 149
   yacc.py: 506:Result : <Node @ 0x10dd32ef0> (<Node.Node object at 0x10dd32ef0>)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon multiInstructions . LexToken(TkEnd,'end',58,1566)
   yacc.py: 471:Action : Reduce rule [multiInstructions -> instructions TkSemicolon multiInstructions] with [<Node @ 0x10dd328d0>,';',<Node @ 0x10dd32ef0>] and goto state 149
   yacc.py: 506:Result : <Node @ 0x10dd32be0> (<Node.Node object at 0x10dd32be0>)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon multiInstructions . LexToken(TkEnd,'end',58,1566)
   yacc.py: 471:Action : Reduce rule [multiInstructions -> instructions TkSemicolon multiInstructions] with [<Node @ 0x10dd329b0>,';',<Node @ 0x10dd32be0>] and goto state 121
   yacc.py: 506:Result : <Node @ 0x10dd32c18> (<Node.Node object at 0x10dd32c18>)
   yacc.py: 410:
   yacc.py: 411:State  : 121
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin multiInstructions . LexToken(TkEnd,'end',58,1566)
   yacc.py: 445:Action : Shift and goto state 159
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin multiInstructions TkEnd . LexToken(TkEnd,'end',59,1574)
   yacc.py: 471:Action : Reduce rule [instructions -> TkBegin multiInstructions TkEnd] with ['begin',<Node @ 0x10dd32c18>,'end'] and goto state 122
   yacc.py: 506:Result : <Node @ 0x10dd32630> (<Node.Node object at 0x10dd32630>)
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs instructions . LexToken(TkEnd,'end',59,1574)
   yacc.py: 471:Action : Reduce rule [instructions -> instructionDefineAs instructions] with [<Node @ 0x10dd32828>,<Node @ 0x10dd32630>] and goto state 69
   yacc.py: 506:Result : <Node @ 0x10dd32978> (<Node.Node object at 0x10dd32978>)
   yacc.py: 410:
   yacc.py: 411:State  : 69
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions . LexToken(TkEnd,'end',59,1574)
   yacc.py: 471:Action : Reduce rule [multiInstructions -> instructions] with [<Node @ 0x10dd32978>] and goto state 149
   yacc.py: 506:Result : <Node @ 0x10dd32978> (<Node.Node object at 0x10dd32978>)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon multiInstructions . LexToken(TkEnd,'end',59,1574)
   yacc.py: 471:Action : Reduce rule [multiInstructions -> instructions TkSemicolon multiInstructions] with [<Node @ 0x10dd32518>,';',<Node @ 0x10dd32978>] and goto state 149
   yacc.py: 506:Result : <Node @ 0x10dd32e10> (<Node.Node object at 0x10dd32e10>)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon multiInstructions . LexToken(TkEnd,'end',59,1574)
   yacc.py: 471:Action : Reduce rule [multiInstructions -> instructions TkSemicolon multiInstructions] with [<Node @ 0x10dd32470>,';',<Node @ 0x10dd32e10>] and goto state 149
   yacc.py: 506:Result : <Node @ 0x10dd32860> (<Node.Node object at 0x10dd32860>)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon multiInstructions . LexToken(TkEnd,'end',59,1574)
   yacc.py: 471:Action : Reduce rule [multiInstructions -> instructions TkSemicolon multiInstructions] with [<Node @ 0x10dd32240>,';',<Node @ 0x10dd32860>] and goto state 149
   yacc.py: 506:Result : <Node @ 0x10dd32550> (<Node.Node object at 0x10dd32550>)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin instructions TkSemicolon multiInstructions . LexToken(TkEnd,'end',59,1574)
   yacc.py: 471:Action : Reduce rule [multiInstructions -> instructions TkSemicolon multiInstructions] with [<Node @ 0x10dd32320>,';',<Node @ 0x10dd32550>] and goto state 121
   yacc.py: 506:Result : <Node @ 0x10dd32588> (<Node.Node object at 0x10dd32588>)
   yacc.py: 410:
   yacc.py: 411:State  : 121
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin multiInstructions . LexToken(TkEnd,'end',59,1574)
   yacc.py: 445:Action : Shift and goto state 159
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs TkBegin multiInstructions TkEnd . LexToken(TkEnd,'end',60,1578)
   yacc.py: 471:Action : Reduce rule [instructions -> TkBegin multiInstructions TkEnd] with ['begin',<Node @ 0x10dd32588>,'end'] and goto state 122
   yacc.py: 506:Result : <Node @ 0x10dd32048> (<Node.Node object at 0x10dd32048>)
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructionDefineAs instructions . LexToken(TkEnd,'end',60,1578)
   yacc.py: 471:Action : Reduce rule [instructions -> instructionDefineAs instructions] with [<Node @ 0x10dd32198>,<Node @ 0x10dd32048>] and goto state 69
   yacc.py: 506:Result : <Node @ 0x10dd322e8> (<Node.Node object at 0x10dd322e8>)
   yacc.py: 410:
   yacc.py: 411:State  : 69
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions . LexToken(TkEnd,'end',60,1578)
   yacc.py: 471:Action : Reduce rule [multiInstructions -> instructions] with [<Node @ 0x10dd322e8>] and goto state 149
   yacc.py: 506:Result : <Node @ 0x10dd322e8> (<Node.Node object at 0x10dd322e8>)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon multiInstructions . LexToken(TkEnd,'end',60,1578)
   yacc.py: 471:Action : Reduce rule [multiInstructions -> instructions TkSemicolon multiInstructions] with [<Node @ 0x10dd2de48>,';',<Node @ 0x10dd322e8>] and goto state 149
   yacc.py: 506:Result : <Node @ 0x10dd32780> (<Node.Node object at 0x10dd32780>)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon instructions TkSemicolon multiInstructions . LexToken(TkEnd,'end',60,1578)
   yacc.py: 471:Action : Reduce rule [multiInstructions -> instructions TkSemicolon multiInstructions] with [<Node @ 0x10dd2dda0>,';',<Node @ 0x10dd32780>] and goto state 149
   yacc.py: 506:Result : <Node @ 0x10dd321d0> (<Node.Node object at 0x10dd321d0>)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon instructions TkSemicolon multiInstructions . LexToken(TkEnd,'end',60,1578)
   yacc.py: 471:Action : Reduce rule [multiInstructions -> instructions TkSemicolon multiInstructions] with [<Node @ 0x10dd2db70>,';',<Node @ 0x10dd321d0>] and goto state 149
   yacc.py: 506:Result : <Node @ 0x10dd2de80> (<Node.Node object at 0x10dd2de80>)
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin instructions TkSemicolon multiInstructions . LexToken(TkEnd,'end',60,1578)
   yacc.py: 471:Action : Reduce rule [multiInstructions -> instructions TkSemicolon multiInstructions] with [<Node @ 0x10dd2dc50>,';',<Node @ 0x10dd2de80>] and goto state 121
   yacc.py: 506:Result : <Node @ 0x10dd2deb8> (<Node.Node object at 0x10dd2deb8>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 121
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin multiInstructions . LexToken(TkEnd,'end',60,1578)
   yacc.py: 445:Action : Shift and goto state 159
   yacc.py: 410:
   yacc.py: 411:State  : 159
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin multiInstructions TkEnd . LexToken(TkEndTask,'end-task',49,1304)
   yacc.py: 469:Action : Reduce rule [instructions -> TkBegin multiInstructions TkEnd] with ['begin',<Node @ 0x1b0a5d83580>,'end'] and goto state 122
   yacc.py: 506:Result : <Node @ 0x1b0a5d7c0d0> (<Node.Node object at 0x000001B0A5D7C0D0>)
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 434:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs instructions . LexToken(TkEndTask,'end-task',49,1304)
   yacc.py: 469:Action : Reduce rule [instructions -> instructionDefineAs instructions] with [<Node @ 0x1b0a5d830d0>,<Node @ 0x1b0a5d7c0d0>] and goto state 69
   yacc.py: 506:Result : <Node @ 0x1b0a5d5d9d0> (<Node.Node object at 0x000001B0A5D5D9D0>)
   yacc.py: 410:
   yacc.py: 411:State  : 69
   yacc.py: 434:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructions . LexToken(TkEndTask,'end-task',49,1304)
   yacc.py: 469:Action : Reduce rule [multiInstructions -> instructions] with [<Node @ 0x1b0a5d5d9d0>] and goto state 68
   yacc.py: 506:Result : <Node @ 0x1b0a5d5d9d0> (<Node.Node object at 0x000001B0A5D5D9D0>)
=======
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs TkBegin multiInstructions TkEnd . LexToken(TkEndTask,'end-task',61,1582)
   yacc.py: 471:Action : Reduce rule [instructions -> TkBegin multiInstructions TkEnd] with ['begin',<Node @ 0x10dd2deb8>,'end'] and goto state 122
   yacc.py: 506:Result : <Node @ 0x10dd2d8d0> (<Node.Node object at 0x10dd2d8d0>)
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructionDefineAs instructions . LexToken(TkEndTask,'end-task',61,1582)
   yacc.py: 471:Action : Reduce rule [instructions -> instructionDefineAs instructions] with [<Node @ 0x10dd2db38>,<Node @ 0x10dd2d8d0>] and goto state 69
   yacc.py: 506:Result : <Node @ 0x10dd2dc18> (<Node.Node object at 0x10dd2dc18>)
   yacc.py: 410:
   yacc.py: 411:State  : 69
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids instructions . LexToken(TkEndTask,'end-task',61,1582)
   yacc.py: 471:Action : Reduce rule [multiInstructions -> instructions] with [<Node @ 0x10dd2dc18>] and goto state 68
   yacc.py: 506:Result : <Node @ 0x10dd2dc18> (<Node.Node object at 0x10dd2dc18>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 410:
   yacc.py: 411:State  : 68
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids multiInstructions . LexToken(TkEndTask,'end-task',61,1582)
   yacc.py: 445:Action : Shift and goto state 100
   yacc.py: 410:
   yacc.py: 411:State  : 100
<<<<<<< HEAD
   yacc.py: 434:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids multiInstructions TkEndTask . $end
   yacc.py: 469:Action : Reduce rule [taskBlock -> TkBeginTask ids TkOn ids multiInstructions TkEndTask] with ['begin-task','task1','on','world1',<Node @ 0x1b0a5d5d9d0>,'end-task'] and goto state 4
   yacc.py: 506:Result : <NoneType @ 0x7ffbf8bf4880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 4
   yacc.py: 434:Stack  : worldBlock worldBlock taskBlock . $end
   yacc.py: 469:Action : Reduce rule [program -> taskBlock] with [None] and goto state 7
   yacc.py: 506:Result : <Node @ 0x1b0a5d5da00> (<Node.Node object at 0x000001B0A5D5DA00>)
   yacc.py: 410:
   yacc.py: 411:State  : 7
   yacc.py: 430:Defaulted state 7: Reduce using 4
   yacc.py: 434:Stack  : worldBlock worldBlock program . $end
   yacc.py: 469:Action : Reduce rule [program -> worldBlock program] with [<Node @ 0x1b0a5d5d8e0>,<Node @ 0x1b0a5d5da00>] and goto state 7
   yacc.py: 506:Result : <Node @ 0x1b0a5d7c0d0> (<Node.Node object at 0x000001B0A5D7C0D0>)
   yacc.py: 410:
   yacc.py: 411:State  : 7
   yacc.py: 430:Defaulted state 7: Reduce using 4
   yacc.py: 434:Stack  : worldBlock program . $end
   yacc.py: 469:Action : Reduce rule [program -> worldBlock program] with [<Node @ 0x1b0a5d5d790>,<Node @ 0x1b0a5d7c0d0>] and goto state 2
   yacc.py: 506:Result : <Node @ 0x1b0a5d83370> (<Node.Node object at 0x000001B0A5D83370>)
   yacc.py: 410:
   yacc.py: 411:State  : 2
   yacc.py: 430:Defaulted state 2: Reduce using 1
   yacc.py: 434:Stack  : program . $end
   yacc.py: 469:Action : Reduce rule [correctProgram -> program] with [<Node @ 0x1b0a5d83370>] and goto state 1
   yacc.py: 506:Result : <Node @ 0x1b0a5d83370> (<Node.Node object at 0x000001B0A5D83370>)
   yacc.py: 410:
   yacc.py: 411:State  : 1
   yacc.py: 434:Stack  : correctProgram . $end
   yacc.py: 571:Done   : Returning <Node @ 0x1b0a5d83370> (<Node.Node object at 0x000001B0A5D83370>)
=======
   yacc.py: 435:Stack  : worldBlock worldBlock TkBeginTask ids TkOn ids multiInstructions TkEndTask . $end
   yacc.py: 471:Action : Reduce rule [taskBlock -> TkBeginTask ids TkOn ids multiInstructions TkEndTask] with ['begin-task','task1','on','world1',<Node @ 0x10dd2dc18>,'end-task'] and goto state 4
   yacc.py: 506:Result : <NoneType @ 0x10d7cd068> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 4
   yacc.py: 435:Stack  : worldBlock worldBlock taskBlock . $end
   yacc.py: 471:Action : Reduce rule [program -> taskBlock] with [None] and goto state 7
   yacc.py: 506:Result : <Node @ 0x10dd1ceb8> (<Node.Node object at 0x10dd1ceb8>)
   yacc.py: 410:
   yacc.py: 411:State  : 7
   yacc.py: 430:Defaulted state 7: Reduce using 4
   yacc.py: 435:Stack  : worldBlock worldBlock program . $end
   yacc.py: 471:Action : Reduce rule [program -> worldBlock program] with [<Node @ 0x10dd1cfd0>,<Node @ 0x10dd1ceb8>] and goto state 7
   yacc.py: 506:Result : <Node @ 0x10dd2dcc0> (<Node.Node object at 0x10dd2dcc0>)
   yacc.py: 410:
   yacc.py: 411:State  : 7
   yacc.py: 430:Defaulted state 7: Reduce using 4
   yacc.py: 435:Stack  : worldBlock program . $end
   yacc.py: 471:Action : Reduce rule [program -> worldBlock program] with [<Node @ 0x10dd1c828>,<Node @ 0x10dd2dcc0>] and goto state 2
   yacc.py: 506:Result : <Node @ 0x10dd2da20> (<Node.Node object at 0x10dd2da20>)
   yacc.py: 410:
   yacc.py: 411:State  : 2
   yacc.py: 430:Defaulted state 2: Reduce using 1
   yacc.py: 435:Stack  : program . $end
   yacc.py: 471:Action : Reduce rule [correctProgram -> program] with [<Node @ 0x10dd2da20>] and goto state 1
   yacc.py: 506:Result : <Node @ 0x10dd2da20> (<Node.Node object at 0x10dd2da20>)
   yacc.py: 410:
   yacc.py: 411:State  : 1
   yacc.py: 435:Stack  : correctProgram . $end
   yacc.py: 571:Done   : Returning <Node @ 0x10dd2da20> (<Node.Node object at 0x10dd2da20>)
>>>>>>> 8e3b0168abbcb401b5318a32683d5d2aacdb3ad3
   yacc.py: 572:PLY: PARSE DEBUG END
